
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.38 (git sha1 543faed9c8c, clang++ 16.0.6 -fPIC -Os)

Loaded SDC plugin
[TCL: yosys -import] Command name collision: found pre-existing command `cd' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `eval' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `exec' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `read' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `trace' -> skip.

1. Executing Liberty frontend: /home/nouran/.volare/volare/sky130/versions/bdc9412b3e468c102d01b7cf6337be06ec6e9c9a/sky130A/libs.ref/sky130_fd_sc_hd/lib/sky130_fd_sc_hd__tt_025C_1v80.lib
Imported 428 cell types from liberty file.

2. Executing Verilog-2005 frontend: /home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_AHBL.pp.v
Parsing SystemVerilog input from `/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_AHBL.pp.v' to AST representation.
Generating RTLIL representation for module `\EF_TMR32_AHBL'.
Successfully finished Verilog frontend.

3. Executing Verilog-2005 frontend: /home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v
Parsing SystemVerilog input from `/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v' to AST representation.
Generating RTLIL representation for module `\EF_TMR32_APB'.
Successfully finished Verilog frontend.

4. Executing Verilog-2005 frontend: /home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v
Parsing SystemVerilog input from `/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v' to AST representation.
Generating RTLIL representation for module `\aucohl_sync'.
Generating RTLIL representation for module `\aucohl_ped'.
Generating RTLIL representation for module `\aucohl_ned'.
Generating RTLIL representation for module `\aucohl_ticker'.
Generating RTLIL representation for module `\aucohl_glitch_filter'.
Generating RTLIL representation for module `\aucohl_fifo'.
Generating RTLIL representation for module `\EF_TMR32'.
Successfully finished Verilog frontend.

5. Generating Graphviz representation of design.
Writing dot description to `/home/nouran/EF_TMR32/verify/uvm-python/sim/default_tag/openlane_run/3-yosys-synthesis/hierarchy.dot'.
Dumping module EF_TMR32_APB to page 1.

6. Executing HIERARCHY pass (managing design hierarchy).

6.1. Analyzing design hierarchy..
Top module:  \EF_TMR32_APB
Used module:     \EF_TMR32
Used module:         \aucohl_ped
Parameter \PRW = 16

6.2. Executing AST frontend in derive mode using pre-parsed AST for module `\EF_TMR32'.
Parameter \PRW = 16
Generating RTLIL representation for module `$paramod\EF_TMR32\PRW=s32'00000000000000000000000000010000'.

6.3. Analyzing design hierarchy..
Top module:  \EF_TMR32_APB
Used module:     $paramod\EF_TMR32\PRW=s32'00000000000000000000000000010000
Used module:         \aucohl_ped

6.4. Analyzing design hierarchy..
Top module:  \EF_TMR32_APB
Used module:     $paramod\EF_TMR32\PRW=s32'00000000000000000000000000010000
Used module:         \aucohl_ped
Removing unused module `\EF_TMR32'.
Removing unused module `\aucohl_fifo'.
Removing unused module `\aucohl_glitch_filter'.
Removing unused module `\aucohl_ticker'.
Removing unused module `\aucohl_ned'.
Removing unused module `\aucohl_sync'.
Removing unused module `\EF_TMR32_AHBL'.
Removed 7 unused modules.
Renaming module EF_TMR32_APB to EF_TMR32_APB.

7. Executing TRIBUF pass.

8. Executing HIERARCHY pass (managing design hierarchy).

8.1. Analyzing design hierarchy..
Top module:  \EF_TMR32_APB
Used module:     $paramod\EF_TMR32\PRW=s32'00000000000000000000000000010000
Used module:         \aucohl_ped

8.2. Analyzing design hierarchy..
Top module:  \EF_TMR32_APB
Used module:     $paramod\EF_TMR32\PRW=s32'00000000000000000000000000010000
Used module:         \aucohl_ped
Removed 0 unused modules.

9. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

10. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 4 switch rules as full_case in process $proc$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:181$161 in module EF_TMR32_APB.
Marked 2 switch rules as full_case in process $proc$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:169$157 in module EF_TMR32_APB.
Marked 1 switch rules as full_case in process $proc$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:166$153 in module EF_TMR32_APB.
Marked 1 switch rules as full_case in process $proc$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:157$148 in module EF_TMR32_APB.
Marked 1 switch rules as full_case in process $proc$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:151$144 in module EF_TMR32_APB.
Marked 1 switch rules as full_case in process $proc$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:145$140 in module EF_TMR32_APB.
Marked 1 switch rules as full_case in process $proc$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:139$136 in module EF_TMR32_APB.
Marked 1 switch rules as full_case in process $proc$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:133$132 in module EF_TMR32_APB.
Marked 1 switch rules as full_case in process $proc$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:127$128 in module EF_TMR32_APB.
Marked 1 switch rules as full_case in process $proc$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:115$124 in module EF_TMR32_APB.
Marked 1 switch rules as full_case in process $proc$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:109$120 in module EF_TMR32_APB.
Marked 1 switch rules as full_case in process $proc$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:103$116 in module EF_TMR32_APB.
Marked 1 switch rules as full_case in process $proc$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:97$112 in module EF_TMR32_APB.
Marked 2 switch rules as full_case in process $proc$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:508$642 in module $paramod\EF_TMR32\PRW=s32'00000000000000000000000000010000.
Marked 2 switch rules as full_case in process $proc$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:501$638 in module $paramod\EF_TMR32\PRW=s32'00000000000000000000000000010000.
Marked 1 switch rules as full_case in process $proc$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:494$632 in module $paramod\EF_TMR32\PRW=s32'00000000000000000000000000010000.
Marked 1 switch rules as full_case in process $proc$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:489$628 in module $paramod\EF_TMR32\PRW=s32'00000000000000000000000000010000.
Marked 1 switch rules as full_case in process $proc$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:481$625 in module $paramod\EF_TMR32\PRW=s32'00000000000000000000000000010000.
Marked 2 switch rules as full_case in process $proc$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:472$621 in module $paramod\EF_TMR32\PRW=s32'00000000000000000000000000010000.
Marked 2 switch rules as full_case in process $proc$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:459$618 in module $paramod\EF_TMR32\PRW=s32'00000000000000000000000000010000.
Marked 2 switch rules as full_case in process $proc$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:450$615 in module $paramod\EF_TMR32\PRW=s32'00000000000000000000000000010000.
Removed 6 dead cases from process $proc$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:438$566 in module $paramod\EF_TMR32\PRW=s32'00000000000000000000000000010000.
Marked 7 switch rules as full_case in process $proc$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:438$566 in module $paramod\EF_TMR32\PRW=s32'00000000000000000000000000010000.
Removed 6 dead cases from process $proc$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:426$517 in module $paramod\EF_TMR32\PRW=s32'00000000000000000000000000010000.
Marked 7 switch rules as full_case in process $proc$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:426$517 in module $paramod\EF_TMR32\PRW=s32'00000000000000000000000000010000.
Marked 7 switch rules as full_case in process $proc$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:391$508 in module $paramod\EF_TMR32\PRW=s32'00000000000000000000000000010000.
Marked 3 switch rules as full_case in process $proc$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:377$505 in module $paramod\EF_TMR32\PRW=s32'00000000000000000000000000010000.
Marked 10 switch rules as full_case in process $proc$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:349$488 in module $paramod\EF_TMR32\PRW=s32'00000000000000000000000000010000.
Marked 3 switch rules as full_case in process $proc$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:334$477 in module $paramod\EF_TMR32\PRW=s32'00000000000000000000000000010000.
Marked 3 switch rules as full_case in process $proc$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:317$467 in module $paramod\EF_TMR32\PRW=s32'00000000000000000000000000010000.
Removed a total of 12 dead cases.

11. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 4 redundant assignments.
Promoted 41 assignments to connections.

12. Executing PROC_INIT pass (extract init attributes).

13. Executing PROC_ARST pass (detect async resets in processes).
Found async reset \PRESETn in `\EF_TMR32_APB.$proc$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:181$161'.
Found async reset \PRESETn in `\EF_TMR32_APB.$proc$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:169$157'.
Found async reset \PRESETn in `\EF_TMR32_APB.$proc$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:166$153'.
Found async reset \PRESETn in `\EF_TMR32_APB.$proc$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:157$148'.
Found async reset \PRESETn in `\EF_TMR32_APB.$proc$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:151$144'.
Found async reset \PRESETn in `\EF_TMR32_APB.$proc$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:145$140'.
Found async reset \PRESETn in `\EF_TMR32_APB.$proc$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:139$136'.
Found async reset \PRESETn in `\EF_TMR32_APB.$proc$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:133$132'.
Found async reset \PRESETn in `\EF_TMR32_APB.$proc$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:127$128'.
Found async reset \PRESETn in `\EF_TMR32_APB.$proc$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:115$124'.
Found async reset \PRESETn in `\EF_TMR32_APB.$proc$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:109$120'.
Found async reset \PRESETn in `\EF_TMR32_APB.$proc$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:103$116'.
Found async reset \PRESETn in `\EF_TMR32_APB.$proc$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:97$112'.
Found async reset \rst_n in `$paramod\EF_TMR32\PRW=s32'00000000000000000000000000010000.$proc$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:508$642'.
Found async reset \rst_n in `$paramod\EF_TMR32\PRW=s32'00000000000000000000000000010000.$proc$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:501$638'.
Found async reset \rst_n in `$paramod\EF_TMR32\PRW=s32'00000000000000000000000000010000.$proc$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:494$632'.
Found async reset \rst_n in `$paramod\EF_TMR32\PRW=s32'00000000000000000000000000010000.$proc$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:489$628'.
Found async reset \rst_n in `$paramod\EF_TMR32\PRW=s32'00000000000000000000000000010000.$proc$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:481$625'.
Found async reset \rst_n in `$paramod\EF_TMR32\PRW=s32'00000000000000000000000000010000.$proc$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:472$621'.
Found async reset \rst_n in `$paramod\EF_TMR32\PRW=s32'00000000000000000000000000010000.$proc$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:459$618'.
Found async reset \rst_n in `$paramod\EF_TMR32\PRW=s32'00000000000000000000000000010000.$proc$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:450$615'.
Found async reset \rst_n in `$paramod\EF_TMR32\PRW=s32'00000000000000000000000000010000.$proc$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:391$508'.
Found async reset \rst_n in `$paramod\EF_TMR32\PRW=s32'00000000000000000000000000010000.$proc$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:377$505'.
Found async reset \rst_n in `$paramod\EF_TMR32\PRW=s32'00000000000000000000000000010000.$proc$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:334$477'.
Found async reset \rst_n in `$paramod\EF_TMR32\PRW=s32'00000000000000000000000000010000.$proc$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:317$467'.

14. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.
<suppressed ~72 debug messages>

15. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\EF_TMR32_APB.$proc$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:181$161'.
     1/4: $0\RIS_REG[2:0] [2]
     2/4: $0\RIS_REG[2:0] [1]
     3/4: $0\RIS_REG[2:0] [0]
     4/4: $1\_i_[31:0]
Creating decoders for process `\EF_TMR32_APB.$proc$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:169$157'.
     1/1: $0\IC_REG[2:0]
Creating decoders for process `\EF_TMR32_APB.$proc$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:166$153'.
     1/1: $0\IM_REG[2:0]
Creating decoders for process `\EF_TMR32_APB.$proc$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:157$148'.
     1/1: $0\PWMFC_REG[15:0]
Creating decoders for process `\EF_TMR32_APB.$proc$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:151$144'.
     1/1: $0\PWMDT_REG[7:0]
Creating decoders for process `\EF_TMR32_APB.$proc$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:145$140'.
     1/1: $0\PWM1CFG_REG[15:0]
Creating decoders for process `\EF_TMR32_APB.$proc$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:139$136'.
     1/1: $0\PWM0CFG_REG[11:0]
Creating decoders for process `\EF_TMR32_APB.$proc$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:133$132'.
     1/1: $0\CFG_REG[2:0]
Creating decoders for process `\EF_TMR32_APB.$proc$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:127$128'.
     1/1: $0\CTRL_REG[6:0]
Creating decoders for process `\EF_TMR32_APB.$proc$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:115$124'.
     1/1: $0\CMPY_REG[31:0]
Creating decoders for process `\EF_TMR32_APB.$proc$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:109$120'.
     1/1: $0\CMPX_REG[31:0]
Creating decoders for process `\EF_TMR32_APB.$proc$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:103$116'.
     1/1: $0\PR_REG[15:0]
Creating decoders for process `\EF_TMR32_APB.$proc$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:97$112'.
     1/1: $0\RELOAD_REG[31:0]
Creating decoders for process `$paramod\EF_TMR32\PRW=s32'00000000000000000000000000010000.$proc$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:508$642'.
     1/1: $0\fault_reg[0:0]
Creating decoders for process `$paramod\EF_TMR32\PRW=s32'00000000000000000000000000010000.$proc$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:501$638'.
     1/1: $0\fault_clr_reg[0:0]
Creating decoders for process `$paramod\EF_TMR32\PRW=s32'00000000000000000000000000010000.$proc$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:494$632'.
     1/1: $0\pwm1_w_dt[0:0]
Creating decoders for process `$paramod\EF_TMR32\PRW=s32'00000000000000000000000000010000.$proc$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:489$628'.
     1/1: $0\pwm0_w_dt[0:0]
Creating decoders for process `$paramod\EF_TMR32\PRW=s32'00000000000000000000000000010000.$proc$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:481$625'.
     1/1: $0\pwm0_delayed[0:0]
Creating decoders for process `$paramod\EF_TMR32\PRW=s32'00000000000000000000000000010000.$proc$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:472$621'.
     1/1: $0\dly_cntr[7:0]
Creating decoders for process `$paramod\EF_TMR32\PRW=s32'00000000000000000000000000010000.$proc$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:459$618'.
     1/1: $0\pwm1_reg[0:0]
Creating decoders for process `$paramod\EF_TMR32\PRW=s32'00000000000000000000000000010000.$proc$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:450$615'.
     1/1: $0\pwm0_reg[0:0]
Creating decoders for process `$paramod\EF_TMR32\PRW=s32'00000000000000000000000000010000.$proc$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:438$566'.
     1/25: $2\pwm_action$func$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:445$465.$result[0:0]$613
     2/25: $2\pwm_action$func$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:444$464.$result[0:0]$611
     3/25: $2\pwm_action$func$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:443$463.$result[0:0]$609
     4/25: $2\pwm_action$func$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:442$462.$result[0:0]$607
     5/25: $2\pwm_action$func$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:441$461.$result[0:0]$605
     6/25: $2\pwm_action$func$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:440$460.$result[0:0]$603
     7/25: $1\pwm1_reg_next[0:0]
     8/25: $1\pwm_action$func$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:440$460.$result[0:0]$585
     9/25: $1\pwm_action$func$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:440$460.sig[0:0]$587
    10/25: $1\pwm_action$func$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:440$460.action[1:0]$586
    11/25: $1\pwm_action$func$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:445$465.sig[0:0]$602
    12/25: $1\pwm_action$func$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:445$465.action[1:0]$601
    13/25: $1\pwm_action$func$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:445$465.$result[0:0]$600
    14/25: $1\pwm_action$func$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:444$464.sig[0:0]$599
    15/25: $1\pwm_action$func$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:444$464.action[1:0]$598
    16/25: $1\pwm_action$func$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:444$464.$result[0:0]$597
    17/25: $1\pwm_action$func$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:443$463.sig[0:0]$596
    18/25: $1\pwm_action$func$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:443$463.action[1:0]$595
    19/25: $1\pwm_action$func$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:443$463.$result[0:0]$594
    20/25: $1\pwm_action$func$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:442$462.sig[0:0]$593
    21/25: $1\pwm_action$func$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:442$462.action[1:0]$592
    22/25: $1\pwm_action$func$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:442$462.$result[0:0]$591
    23/25: $1\pwm_action$func$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:441$461.sig[0:0]$590
    24/25: $1\pwm_action$func$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:441$461.action[1:0]$589
    25/25: $1\pwm_action$func$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:441$461.$result[0:0]$588
Creating decoders for process `$paramod\EF_TMR32\PRW=s32'00000000000000000000000000010000.$proc$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:426$517'.
     1/25: $2\pwm_action$func$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:433$459.$result[0:0]$564
     2/25: $2\pwm_action$func$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:432$458.$result[0:0]$562
     3/25: $2\pwm_action$func$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:431$457.$result[0:0]$560
     4/25: $2\pwm_action$func$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:430$456.$result[0:0]$558
     5/25: $2\pwm_action$func$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:429$455.$result[0:0]$556
     6/25: $2\pwm_action$func$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:428$454.$result[0:0]$554
     7/25: $1\pwm0_reg_next[0:0]
     8/25: $1\pwm_action$func$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:428$454.$result[0:0]$536
     9/25: $1\pwm_action$func$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:428$454.sig[0:0]$538
    10/25: $1\pwm_action$func$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:428$454.action[1:0]$537
    11/25: $1\pwm_action$func$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:433$459.sig[0:0]$553
    12/25: $1\pwm_action$func$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:433$459.action[1:0]$552
    13/25: $1\pwm_action$func$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:433$459.$result[0:0]$551
    14/25: $1\pwm_action$func$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:432$458.sig[0:0]$550
    15/25: $1\pwm_action$func$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:432$458.action[1:0]$549
    16/25: $1\pwm_action$func$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:432$458.$result[0:0]$548
    17/25: $1\pwm_action$func$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:431$457.sig[0:0]$547
    18/25: $1\pwm_action$func$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:431$457.action[1:0]$546
    19/25: $1\pwm_action$func$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:431$457.$result[0:0]$545
    20/25: $1\pwm_action$func$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:430$456.sig[0:0]$544
    21/25: $1\pwm_action$func$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:430$456.action[1:0]$543
    22/25: $1\pwm_action$func$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:430$456.$result[0:0]$542
    23/25: $1\pwm_action$func$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:429$455.sig[0:0]$541
    24/25: $1\pwm_action$func$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:429$455.action[1:0]$540
    25/25: $1\pwm_action$func$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:429$455.$result[0:0]$539
Creating decoders for process `$paramod\EF_TMR32\PRW=s32'00000000000000000000000000010000.$proc$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:391$508'.
     1/1: $0\tmr_dir[0:0]
Creating decoders for process `$paramod\EF_TMR32\PRW=s32'00000000000000000000000000010000.$proc$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:377$505'.
     1/1: $0\tmr_reg[31:0]
Creating decoders for process `$paramod\EF_TMR32\PRW=s32'00000000000000000000000000010000.$proc$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:349$488'.
     1/10: $10\tmr_reg_next[31:0]
     2/10: $9\tmr_reg_next[31:0]
     3/10: $8\tmr_reg_next[31:0]
     4/10: $7\tmr_reg_next[31:0]
     5/10: $6\tmr_reg_next[31:0]
     6/10: $5\tmr_reg_next[31:0]
     7/10: $4\tmr_reg_next[31:0]
     8/10: $3\tmr_reg_next[31:0]
     9/10: $2\tmr_reg_next[31:0]
    10/10: $1\tmr_reg_next[31:0]
Creating decoders for process `$paramod\EF_TMR32\PRW=s32'00000000000000000000000000010000.$proc$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:334$477'.
     1/1: $0\tmr_run[0:0]
Creating decoders for process `$paramod\EF_TMR32\PRW=s32'00000000000000000000000000010000.$proc$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:317$467'.
     1/1: $0\pr_reg[15:0]
Creating decoders for process `\aucohl_ped.$proc$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:57$209'.

16. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `$paramod\EF_TMR32\PRW=s32'00000000000000000000000000010000.\pwm1_reg_next' from process `$paramod\EF_TMR32\PRW=s32'00000000000000000000000000010000.$proc$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:438$566'.
No latch inferred for signal `$paramod\EF_TMR32\PRW=s32'00000000000000000000000000010000.\pwm_action$func$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:440$460.$result' from process `$paramod\EF_TMR32\PRW=s32'00000000000000000000000000010000.$proc$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:438$566'.
No latch inferred for signal `$paramod\EF_TMR32\PRW=s32'00000000000000000000000000010000.\pwm_action$func$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:440$460.action' from process `$paramod\EF_TMR32\PRW=s32'00000000000000000000000000010000.$proc$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:438$566'.
No latch inferred for signal `$paramod\EF_TMR32\PRW=s32'00000000000000000000000000010000.\pwm_action$func$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:440$460.sig' from process `$paramod\EF_TMR32\PRW=s32'00000000000000000000000000010000.$proc$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:438$566'.
No latch inferred for signal `$paramod\EF_TMR32\PRW=s32'00000000000000000000000000010000.\pwm_action$func$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:441$461.$result' from process `$paramod\EF_TMR32\PRW=s32'00000000000000000000000000010000.$proc$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:438$566'.
No latch inferred for signal `$paramod\EF_TMR32\PRW=s32'00000000000000000000000000010000.\pwm_action$func$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:441$461.action' from process `$paramod\EF_TMR32\PRW=s32'00000000000000000000000000010000.$proc$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:438$566'.
No latch inferred for signal `$paramod\EF_TMR32\PRW=s32'00000000000000000000000000010000.\pwm_action$func$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:441$461.sig' from process `$paramod\EF_TMR32\PRW=s32'00000000000000000000000000010000.$proc$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:438$566'.
No latch inferred for signal `$paramod\EF_TMR32\PRW=s32'00000000000000000000000000010000.\pwm_action$func$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:442$462.$result' from process `$paramod\EF_TMR32\PRW=s32'00000000000000000000000000010000.$proc$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:438$566'.
No latch inferred for signal `$paramod\EF_TMR32\PRW=s32'00000000000000000000000000010000.\pwm_action$func$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:442$462.action' from process `$paramod\EF_TMR32\PRW=s32'00000000000000000000000000010000.$proc$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:438$566'.
No latch inferred for signal `$paramod\EF_TMR32\PRW=s32'00000000000000000000000000010000.\pwm_action$func$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:442$462.sig' from process `$paramod\EF_TMR32\PRW=s32'00000000000000000000000000010000.$proc$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:438$566'.
No latch inferred for signal `$paramod\EF_TMR32\PRW=s32'00000000000000000000000000010000.\pwm_action$func$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:443$463.$result' from process `$paramod\EF_TMR32\PRW=s32'00000000000000000000000000010000.$proc$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:438$566'.
No latch inferred for signal `$paramod\EF_TMR32\PRW=s32'00000000000000000000000000010000.\pwm_action$func$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:443$463.action' from process `$paramod\EF_TMR32\PRW=s32'00000000000000000000000000010000.$proc$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:438$566'.
No latch inferred for signal `$paramod\EF_TMR32\PRW=s32'00000000000000000000000000010000.\pwm_action$func$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:443$463.sig' from process `$paramod\EF_TMR32\PRW=s32'00000000000000000000000000010000.$proc$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:438$566'.
No latch inferred for signal `$paramod\EF_TMR32\PRW=s32'00000000000000000000000000010000.\pwm_action$func$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:444$464.$result' from process `$paramod\EF_TMR32\PRW=s32'00000000000000000000000000010000.$proc$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:438$566'.
No latch inferred for signal `$paramod\EF_TMR32\PRW=s32'00000000000000000000000000010000.\pwm_action$func$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:444$464.action' from process `$paramod\EF_TMR32\PRW=s32'00000000000000000000000000010000.$proc$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:438$566'.
No latch inferred for signal `$paramod\EF_TMR32\PRW=s32'00000000000000000000000000010000.\pwm_action$func$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:444$464.sig' from process `$paramod\EF_TMR32\PRW=s32'00000000000000000000000000010000.$proc$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:438$566'.
No latch inferred for signal `$paramod\EF_TMR32\PRW=s32'00000000000000000000000000010000.\pwm_action$func$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:445$465.$result' from process `$paramod\EF_TMR32\PRW=s32'00000000000000000000000000010000.$proc$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:438$566'.
No latch inferred for signal `$paramod\EF_TMR32\PRW=s32'00000000000000000000000000010000.\pwm_action$func$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:445$465.action' from process `$paramod\EF_TMR32\PRW=s32'00000000000000000000000000010000.$proc$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:438$566'.
No latch inferred for signal `$paramod\EF_TMR32\PRW=s32'00000000000000000000000000010000.\pwm_action$func$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:445$465.sig' from process `$paramod\EF_TMR32\PRW=s32'00000000000000000000000000010000.$proc$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:438$566'.
No latch inferred for signal `$paramod\EF_TMR32\PRW=s32'00000000000000000000000000010000.\pwm0_reg_next' from process `$paramod\EF_TMR32\PRW=s32'00000000000000000000000000010000.$proc$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:426$517'.
No latch inferred for signal `$paramod\EF_TMR32\PRW=s32'00000000000000000000000000010000.\pwm_action$func$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:428$454.$result' from process `$paramod\EF_TMR32\PRW=s32'00000000000000000000000000010000.$proc$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:426$517'.
No latch inferred for signal `$paramod\EF_TMR32\PRW=s32'00000000000000000000000000010000.\pwm_action$func$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:428$454.action' from process `$paramod\EF_TMR32\PRW=s32'00000000000000000000000000010000.$proc$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:426$517'.
No latch inferred for signal `$paramod\EF_TMR32\PRW=s32'00000000000000000000000000010000.\pwm_action$func$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:428$454.sig' from process `$paramod\EF_TMR32\PRW=s32'00000000000000000000000000010000.$proc$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:426$517'.
No latch inferred for signal `$paramod\EF_TMR32\PRW=s32'00000000000000000000000000010000.\pwm_action$func$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:429$455.$result' from process `$paramod\EF_TMR32\PRW=s32'00000000000000000000000000010000.$proc$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:426$517'.
No latch inferred for signal `$paramod\EF_TMR32\PRW=s32'00000000000000000000000000010000.\pwm_action$func$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:429$455.action' from process `$paramod\EF_TMR32\PRW=s32'00000000000000000000000000010000.$proc$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:426$517'.
No latch inferred for signal `$paramod\EF_TMR32\PRW=s32'00000000000000000000000000010000.\pwm_action$func$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:429$455.sig' from process `$paramod\EF_TMR32\PRW=s32'00000000000000000000000000010000.$proc$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:426$517'.
No latch inferred for signal `$paramod\EF_TMR32\PRW=s32'00000000000000000000000000010000.\pwm_action$func$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:430$456.$result' from process `$paramod\EF_TMR32\PRW=s32'00000000000000000000000000010000.$proc$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:426$517'.
No latch inferred for signal `$paramod\EF_TMR32\PRW=s32'00000000000000000000000000010000.\pwm_action$func$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:430$456.action' from process `$paramod\EF_TMR32\PRW=s32'00000000000000000000000000010000.$proc$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:426$517'.
No latch inferred for signal `$paramod\EF_TMR32\PRW=s32'00000000000000000000000000010000.\pwm_action$func$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:430$456.sig' from process `$paramod\EF_TMR32\PRW=s32'00000000000000000000000000010000.$proc$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:426$517'.
No latch inferred for signal `$paramod\EF_TMR32\PRW=s32'00000000000000000000000000010000.\pwm_action$func$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:431$457.$result' from process `$paramod\EF_TMR32\PRW=s32'00000000000000000000000000010000.$proc$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:426$517'.
No latch inferred for signal `$paramod\EF_TMR32\PRW=s32'00000000000000000000000000010000.\pwm_action$func$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:431$457.action' from process `$paramod\EF_TMR32\PRW=s32'00000000000000000000000000010000.$proc$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:426$517'.
No latch inferred for signal `$paramod\EF_TMR32\PRW=s32'00000000000000000000000000010000.\pwm_action$func$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:431$457.sig' from process `$paramod\EF_TMR32\PRW=s32'00000000000000000000000000010000.$proc$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:426$517'.
No latch inferred for signal `$paramod\EF_TMR32\PRW=s32'00000000000000000000000000010000.\pwm_action$func$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:432$458.$result' from process `$paramod\EF_TMR32\PRW=s32'00000000000000000000000000010000.$proc$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:426$517'.
No latch inferred for signal `$paramod\EF_TMR32\PRW=s32'00000000000000000000000000010000.\pwm_action$func$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:432$458.action' from process `$paramod\EF_TMR32\PRW=s32'00000000000000000000000000010000.$proc$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:426$517'.
No latch inferred for signal `$paramod\EF_TMR32\PRW=s32'00000000000000000000000000010000.\pwm_action$func$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:432$458.sig' from process `$paramod\EF_TMR32\PRW=s32'00000000000000000000000000010000.$proc$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:426$517'.
No latch inferred for signal `$paramod\EF_TMR32\PRW=s32'00000000000000000000000000010000.\pwm_action$func$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:433$459.$result' from process `$paramod\EF_TMR32\PRW=s32'00000000000000000000000000010000.$proc$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:426$517'.
No latch inferred for signal `$paramod\EF_TMR32\PRW=s32'00000000000000000000000000010000.\pwm_action$func$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:433$459.action' from process `$paramod\EF_TMR32\PRW=s32'00000000000000000000000000010000.$proc$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:426$517'.
No latch inferred for signal `$paramod\EF_TMR32\PRW=s32'00000000000000000000000000010000.\pwm_action$func$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:433$459.sig' from process `$paramod\EF_TMR32\PRW=s32'00000000000000000000000000010000.$proc$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:426$517'.
No latch inferred for signal `$paramod\EF_TMR32\PRW=s32'00000000000000000000000000010000.\tmr_reg_next' from process `$paramod\EF_TMR32\PRW=s32'00000000000000000000000000010000.$proc$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:349$488'.

17. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\EF_TMR32_APB.\RIS_REG' using process `\EF_TMR32_APB.$proc$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:181$161'.
  created $adff cell `$procdff$1259' with positive edge clock and negative level reset.
Creating register for signal `\EF_TMR32_APB.\_i_' using process `\EF_TMR32_APB.$proc$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:181$161'.
  created $dff cell `$procdff$1262' with positive edge clock.
Creating register for signal `\EF_TMR32_APB.\IC_REG' using process `\EF_TMR32_APB.$proc$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:169$157'.
  created $adff cell `$procdff$1263' with positive edge clock and negative level reset.
Creating register for signal `\EF_TMR32_APB.\IM_REG' using process `\EF_TMR32_APB.$proc$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:166$153'.
  created $adff cell `$procdff$1264' with positive edge clock and negative level reset.
Creating register for signal `\EF_TMR32_APB.\PWMFC_REG' using process `\EF_TMR32_APB.$proc$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:157$148'.
  created $adff cell `$procdff$1265' with positive edge clock and negative level reset.
Creating register for signal `\EF_TMR32_APB.\PWMDT_REG' using process `\EF_TMR32_APB.$proc$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:151$144'.
  created $adff cell `$procdff$1266' with positive edge clock and negative level reset.
Creating register for signal `\EF_TMR32_APB.\PWM1CFG_REG' using process `\EF_TMR32_APB.$proc$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:145$140'.
  created $adff cell `$procdff$1267' with positive edge clock and negative level reset.
Creating register for signal `\EF_TMR32_APB.\PWM0CFG_REG' using process `\EF_TMR32_APB.$proc$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:139$136'.
  created $adff cell `$procdff$1268' with positive edge clock and negative level reset.
Creating register for signal `\EF_TMR32_APB.\CFG_REG' using process `\EF_TMR32_APB.$proc$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:133$132'.
  created $adff cell `$procdff$1269' with positive edge clock and negative level reset.
Creating register for signal `\EF_TMR32_APB.\CTRL_REG' using process `\EF_TMR32_APB.$proc$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:127$128'.
  created $adff cell `$procdff$1270' with positive edge clock and negative level reset.
Creating register for signal `\EF_TMR32_APB.\CMPY_REG' using process `\EF_TMR32_APB.$proc$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:115$124'.
  created $adff cell `$procdff$1271' with positive edge clock and negative level reset.
Creating register for signal `\EF_TMR32_APB.\CMPX_REG' using process `\EF_TMR32_APB.$proc$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:109$120'.
  created $adff cell `$procdff$1272' with positive edge clock and negative level reset.
Creating register for signal `\EF_TMR32_APB.\PR_REG' using process `\EF_TMR32_APB.$proc$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:103$116'.
  created $adff cell `$procdff$1273' with positive edge clock and negative level reset.
Creating register for signal `\EF_TMR32_APB.\RELOAD_REG' using process `\EF_TMR32_APB.$proc$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:97$112'.
  created $adff cell `$procdff$1274' with positive edge clock and negative level reset.
Creating register for signal `$paramod\EF_TMR32\PRW=s32'00000000000000000000000000010000.\fault_reg' using process `$paramod\EF_TMR32\PRW=s32'00000000000000000000000000010000.$proc$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:508$642'.
  created $adff cell `$procdff$1275' with positive edge clock and negative level reset.
Creating register for signal `$paramod\EF_TMR32\PRW=s32'00000000000000000000000000010000.\fault_clr_reg' using process `$paramod\EF_TMR32\PRW=s32'00000000000000000000000000010000.$proc$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:501$638'.
  created $adff cell `$procdff$1276' with positive edge clock and negative level reset.
Creating register for signal `$paramod\EF_TMR32\PRW=s32'00000000000000000000000000010000.\pwm1_w_dt' using process `$paramod\EF_TMR32\PRW=s32'00000000000000000000000000010000.$proc$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:494$632'.
  created $adff cell `$procdff$1277' with positive edge clock and negative level reset.
Creating register for signal `$paramod\EF_TMR32\PRW=s32'00000000000000000000000000010000.\pwm0_w_dt' using process `$paramod\EF_TMR32\PRW=s32'00000000000000000000000000010000.$proc$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:489$628'.
  created $adff cell `$procdff$1278' with positive edge clock and negative level reset.
Creating register for signal `$paramod\EF_TMR32\PRW=s32'00000000000000000000000000010000.\pwm0_delayed' using process `$paramod\EF_TMR32\PRW=s32'00000000000000000000000000010000.$proc$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:481$625'.
  created $adff cell `$procdff$1279' with positive edge clock and negative level reset.
Creating register for signal `$paramod\EF_TMR32\PRW=s32'00000000000000000000000000010000.\dly_cntr' using process `$paramod\EF_TMR32\PRW=s32'00000000000000000000000000010000.$proc$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:472$621'.
  created $adff cell `$procdff$1280' with positive edge clock and negative level reset.
Creating register for signal `$paramod\EF_TMR32\PRW=s32'00000000000000000000000000010000.\pwm1_reg' using process `$paramod\EF_TMR32\PRW=s32'00000000000000000000000000010000.$proc$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:459$618'.
  created $adff cell `$procdff$1281' with positive edge clock and negative level reset.
Creating register for signal `$paramod\EF_TMR32\PRW=s32'00000000000000000000000000010000.\pwm0_reg' using process `$paramod\EF_TMR32\PRW=s32'00000000000000000000000000010000.$proc$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:450$615'.
  created $adff cell `$procdff$1282' with positive edge clock and negative level reset.
Creating register for signal `$paramod\EF_TMR32\PRW=s32'00000000000000000000000000010000.\tmr_dir' using process `$paramod\EF_TMR32\PRW=s32'00000000000000000000000000010000.$proc$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:391$508'.
  created $adff cell `$procdff$1283' with positive edge clock and negative level reset.
Creating register for signal `$paramod\EF_TMR32\PRW=s32'00000000000000000000000000010000.\tmr_reg' using process `$paramod\EF_TMR32\PRW=s32'00000000000000000000000000010000.$proc$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:377$505'.
  created $adff cell `$procdff$1284' with positive edge clock and negative level reset.
Creating register for signal `$paramod\EF_TMR32\PRW=s32'00000000000000000000000000010000.\tmr_run' using process `$paramod\EF_TMR32\PRW=s32'00000000000000000000000000010000.$proc$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:334$477'.
  created $adff cell `$procdff$1285' with positive edge clock and negative level reset.
Creating register for signal `$paramod\EF_TMR32\PRW=s32'00000000000000000000000000010000.\pr_reg' using process `$paramod\EF_TMR32\PRW=s32'00000000000000000000000000010000.$proc$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:317$467'.
  created $adff cell `$procdff$1286' with positive edge clock and negative level reset.
Creating register for signal `\aucohl_ped.\last_in' using process `\aucohl_ped.$proc$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:57$209'.
  created $dff cell `$procdff$1287' with positive edge clock.

18. Executing PROC_MEMWR pass (convert process memory writes to cells).

19. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 6 empty switches in `\EF_TMR32_APB.$proc$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:181$161'.
Removing empty process `EF_TMR32_APB.$proc$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:181$161'.
Found and cleaned up 1 empty switch in `\EF_TMR32_APB.$proc$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:169$157'.
Removing empty process `EF_TMR32_APB.$proc$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:169$157'.
Found and cleaned up 1 empty switch in `\EF_TMR32_APB.$proc$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:166$153'.
Removing empty process `EF_TMR32_APB.$proc$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:166$153'.
Found and cleaned up 1 empty switch in `\EF_TMR32_APB.$proc$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:157$148'.
Removing empty process `EF_TMR32_APB.$proc$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:157$148'.
Found and cleaned up 1 empty switch in `\EF_TMR32_APB.$proc$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:151$144'.
Removing empty process `EF_TMR32_APB.$proc$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:151$144'.
Found and cleaned up 1 empty switch in `\EF_TMR32_APB.$proc$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:145$140'.
Removing empty process `EF_TMR32_APB.$proc$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:145$140'.
Found and cleaned up 1 empty switch in `\EF_TMR32_APB.$proc$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:139$136'.
Removing empty process `EF_TMR32_APB.$proc$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:139$136'.
Found and cleaned up 1 empty switch in `\EF_TMR32_APB.$proc$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:133$132'.
Removing empty process `EF_TMR32_APB.$proc$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:133$132'.
Found and cleaned up 1 empty switch in `\EF_TMR32_APB.$proc$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:127$128'.
Removing empty process `EF_TMR32_APB.$proc$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:127$128'.
Found and cleaned up 1 empty switch in `\EF_TMR32_APB.$proc$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:115$124'.
Removing empty process `EF_TMR32_APB.$proc$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:115$124'.
Found and cleaned up 1 empty switch in `\EF_TMR32_APB.$proc$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:109$120'.
Removing empty process `EF_TMR32_APB.$proc$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:109$120'.
Found and cleaned up 1 empty switch in `\EF_TMR32_APB.$proc$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:103$116'.
Removing empty process `EF_TMR32_APB.$proc$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:103$116'.
Found and cleaned up 1 empty switch in `\EF_TMR32_APB.$proc$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:97$112'.
Removing empty process `EF_TMR32_APB.$proc$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:97$112'.
Found and cleaned up 2 empty switches in `$paramod\EF_TMR32\PRW=s32'00000000000000000000000000010000.$proc$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:508$642'.
Removing empty process `$paramod\EF_TMR32\PRW=s32'00000000000000000000000000010000.$proc$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:508$642'.
Found and cleaned up 2 empty switches in `$paramod\EF_TMR32\PRW=s32'00000000000000000000000000010000.$proc$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:501$638'.
Removing empty process `$paramod\EF_TMR32\PRW=s32'00000000000000000000000000010000.$proc$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:501$638'.
Removing empty process `$paramod\EF_TMR32\PRW=s32'00000000000000000000000000010000.$proc$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:494$632'.
Removing empty process `$paramod\EF_TMR32\PRW=s32'00000000000000000000000000010000.$proc$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:489$628'.
Found and cleaned up 2 empty switches in `$paramod\EF_TMR32\PRW=s32'00000000000000000000000000010000.$proc$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:481$625'.
Removing empty process `$paramod\EF_TMR32\PRW=s32'00000000000000000000000000010000.$proc$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:481$625'.
Found and cleaned up 2 empty switches in `$paramod\EF_TMR32\PRW=s32'00000000000000000000000000010000.$proc$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:472$621'.
Removing empty process `$paramod\EF_TMR32\PRW=s32'00000000000000000000000000010000.$proc$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:472$621'.
Found and cleaned up 2 empty switches in `$paramod\EF_TMR32\PRW=s32'00000000000000000000000000010000.$proc$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:459$618'.
Removing empty process `$paramod\EF_TMR32\PRW=s32'00000000000000000000000000010000.$proc$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:459$618'.
Found and cleaned up 2 empty switches in `$paramod\EF_TMR32\PRW=s32'00000000000000000000000000010000.$proc$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:450$615'.
Removing empty process `$paramod\EF_TMR32\PRW=s32'00000000000000000000000000010000.$proc$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:450$615'.
Found and cleaned up 7 empty switches in `$paramod\EF_TMR32\PRW=s32'00000000000000000000000000010000.$proc$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:438$566'.
Removing empty process `$paramod\EF_TMR32\PRW=s32'00000000000000000000000000010000.$proc$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:438$566'.
Found and cleaned up 7 empty switches in `$paramod\EF_TMR32\PRW=s32'00000000000000000000000000010000.$proc$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:426$517'.
Removing empty process `$paramod\EF_TMR32\PRW=s32'00000000000000000000000000010000.$proc$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:426$517'.
Found and cleaned up 8 empty switches in `$paramod\EF_TMR32\PRW=s32'00000000000000000000000000010000.$proc$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:391$508'.
Removing empty process `$paramod\EF_TMR32\PRW=s32'00000000000000000000000000010000.$proc$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:391$508'.
Found and cleaned up 4 empty switches in `$paramod\EF_TMR32\PRW=s32'00000000000000000000000000010000.$proc$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:377$505'.
Removing empty process `$paramod\EF_TMR32\PRW=s32'00000000000000000000000000010000.$proc$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:377$505'.
Found and cleaned up 10 empty switches in `$paramod\EF_TMR32\PRW=s32'00000000000000000000000000010000.$proc$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:349$488'.
Removing empty process `$paramod\EF_TMR32\PRW=s32'00000000000000000000000000010000.$proc$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:349$488'.
Found and cleaned up 4 empty switches in `$paramod\EF_TMR32\PRW=s32'00000000000000000000000000010000.$proc$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:334$477'.
Removing empty process `$paramod\EF_TMR32\PRW=s32'00000000000000000000000000010000.$proc$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:334$477'.
Found and cleaned up 2 empty switches in `$paramod\EF_TMR32\PRW=s32'00000000000000000000000000010000.$proc$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:317$467'.
Removing empty process `$paramod\EF_TMR32\PRW=s32'00000000000000000000000000010000.$proc$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:317$467'.
Removing empty process `aucohl_ped.$proc$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:57$209'.
Cleaned up 72 empty switches.

20. Executing CHECK pass (checking for obvious problems).
Checking module EF_TMR32_APB...
Checking module $paramod\EF_TMR32\PRW=s32'00000000000000000000000000010000...
Checking module aucohl_ped...
Found and reported 0 problems.

21. Executing OPT_EXPR pass (perform const folding).
Optimizing module EF_TMR32_APB.
<suppressed ~4 debug messages>
Optimizing module $paramod\EF_TMR32\PRW=s32'00000000000000000000000000010000.
<suppressed ~27 debug messages>
Optimizing module aucohl_ped.

22. Executing FLATTEN pass (flatten design).
Deleting now unused module $paramod\EF_TMR32\PRW=s32'00000000000000000000000000010000.
Deleting now unused module aucohl_ped.
<suppressed ~2 debug messages>

23. Executing OPT_EXPR pass (perform const folding).
Optimizing module EF_TMR32_APB.

24. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \EF_TMR32_APB..
Removed 102 unused cells and 375 unused wires.
<suppressed ~115 debug messages>

25. Executing OPT pass (performing simple optimizations).

25.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module EF_TMR32_APB.

25.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\EF_TMR32_APB'.
<suppressed ~168 debug messages>
Removed a total of 56 cells.

25.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \EF_TMR32_APB..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 2/2 on $mux $flatten\instance_to_wrap.$procmux$1100.
    dead port 1/2 on $mux $flatten\instance_to_wrap.$procmux$1103.
    dead port 1/2 on $mux $flatten\instance_to_wrap.$procmux$1106.
    dead port 1/2 on $mux $flatten\instance_to_wrap.$procmux$1109.
    dead port 1/2 on $mux $flatten\instance_to_wrap.$procmux$1112.
    dead port 1/2 on $mux $flatten\instance_to_wrap.$procmux$1115.
    dead port 2/2 on $mux $flatten\instance_to_wrap.$procmux$1118.
    dead port 1/2 on $mux $flatten\instance_to_wrap.$procmux$1124.
    dead port 1/2 on $mux $flatten\instance_to_wrap.$procmux$1127.
    dead port 1/2 on $mux $flatten\instance_to_wrap.$procmux$1130.
    dead port 1/2 on $mux $flatten\instance_to_wrap.$procmux$1133.
    dead port 1/2 on $mux $flatten\instance_to_wrap.$procmux$1136.
    dead port 2/2 on $mux $flatten\instance_to_wrap.$procmux$1139.
    dead port 2/2 on $mux $flatten\instance_to_wrap.$procmux$1145.
    dead port 1/2 on $mux $flatten\instance_to_wrap.$procmux$1148.
    dead port 1/2 on $mux $flatten\instance_to_wrap.$procmux$1151.
    dead port 1/2 on $mux $flatten\instance_to_wrap.$procmux$1154.
    dead port 1/2 on $mux $flatten\instance_to_wrap.$procmux$1157.
    dead port 2/2 on $mux $flatten\instance_to_wrap.$procmux$1160.
    dead port 1/2 on $mux $flatten\instance_to_wrap.$procmux$1166.
    dead port 1/2 on $mux $flatten\instance_to_wrap.$procmux$1169.
    dead port 1/2 on $mux $flatten\instance_to_wrap.$procmux$1172.
    dead port 1/2 on $mux $flatten\instance_to_wrap.$procmux$1175.
    dead port 2/2 on $mux $flatten\instance_to_wrap.$procmux$1178.
    dead port 2/2 on $mux $flatten\instance_to_wrap.$procmux$1184.
    dead port 1/2 on $mux $flatten\instance_to_wrap.$procmux$1187.
    dead port 1/2 on $mux $flatten\instance_to_wrap.$procmux$1190.
    dead port 1/2 on $mux $flatten\instance_to_wrap.$procmux$1193.
    dead port 2/2 on $mux $flatten\instance_to_wrap.$procmux$1196.
    dead port 1/2 on $mux $flatten\instance_to_wrap.$procmux$1202.
    dead port 1/2 on $mux $flatten\instance_to_wrap.$procmux$1205.
    dead port 1/2 on $mux $flatten\instance_to_wrap.$procmux$1208.
    dead port 2/2 on $mux $flatten\instance_to_wrap.$procmux$1211.
    dead port 1/2 on $mux $flatten\instance_to_wrap.$procmux$1217.
    dead port 1/2 on $mux $flatten\instance_to_wrap.$procmux$1220.
    dead port 2/2 on $mux $flatten\instance_to_wrap.$procmux$1223.
    dead port 1/2 on $mux $flatten\instance_to_wrap.$procmux$1229.
    dead port 2/2 on $mux $flatten\instance_to_wrap.$procmux$1232.
    dead port 2/2 on $mux $flatten\instance_to_wrap.$procmux$1238.
    dead port 2/2 on $mux $flatten\instance_to_wrap.$procmux$730.
    dead port 2/2 on $mux $flatten\instance_to_wrap.$procmux$739.
    dead port 2/2 on $mux $flatten\instance_to_wrap.$procmux$749.
    dead port 2/2 on $mux $flatten\instance_to_wrap.$procmux$760.
    dead port 2/2 on $mux $flatten\instance_to_wrap.$procmux$772.
    dead port 2/2 on $mux $flatten\instance_to_wrap.$procmux$785.
    dead port 2/2 on $mux $flatten\instance_to_wrap.$procmux$900.
    dead port 2/2 on $mux $flatten\instance_to_wrap.$procmux$909.
    dead port 2/2 on $mux $flatten\instance_to_wrap.$procmux$919.
    dead port 2/2 on $mux $flatten\instance_to_wrap.$procmux$930.
    dead port 2/2 on $mux $flatten\instance_to_wrap.$procmux$942.
    dead port 2/2 on $mux $flatten\instance_to_wrap.$procmux$955.
Removed 51 multiplexer ports.
<suppressed ~29 debug messages>

25.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \EF_TMR32_APB.
Performed a total of 0 changes.

25.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\EF_TMR32_APB'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

25.6. Executing OPT_DFF pass (perform DFF optimizations).

25.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \EF_TMR32_APB..
Removed 0 unused cells and 108 unused wires.
<suppressed ~1 debug messages>

25.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module EF_TMR32_APB.

25.9. Rerunning OPT passes. (Maybe there is more to do..)

25.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \EF_TMR32_APB..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~30 debug messages>

25.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \EF_TMR32_APB.
Performed a total of 0 changes.

25.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\EF_TMR32_APB'.
Removed a total of 0 cells.

25.13. Executing OPT_DFF pass (perform DFF optimizations).

25.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \EF_TMR32_APB..

25.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module EF_TMR32_APB.

25.16. Finished OPT passes. (There is nothing left to do.)

26. Executing FSM pass (extract and optimize FSM).

26.1. Executing FSM_DETECT pass (finding FSMs in design).

26.2. Executing FSM_EXTRACT pass (extracting FSM from design).

26.3. Executing FSM_OPT pass (simple optimizations of FSMs).

26.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \EF_TMR32_APB..

26.5. Executing FSM_OPT pass (simple optimizations of FSMs).

26.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

26.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

26.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

27. Executing OPT pass (performing simple optimizations).

27.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module EF_TMR32_APB.

27.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\EF_TMR32_APB'.
Removed a total of 0 cells.

27.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \EF_TMR32_APB..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~30 debug messages>

27.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \EF_TMR32_APB.
Performed a total of 0 changes.

27.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\EF_TMR32_APB'.
Removed a total of 0 cells.

27.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $procdff$1274 ($adff) from module EF_TMR32_APB (D = \PWDATA, Q = \RELOAD_REG).
Adding EN signal on $procdff$1273 ($adff) from module EF_TMR32_APB (D = \PWDATA [15:0], Q = \PR_REG).
Adding EN signal on $procdff$1272 ($adff) from module EF_TMR32_APB (D = \PWDATA, Q = \CMPX_REG).
Adding EN signal on $procdff$1271 ($adff) from module EF_TMR32_APB (D = \PWDATA, Q = \CMPY_REG).
Adding EN signal on $procdff$1270 ($adff) from module EF_TMR32_APB (D = \PWDATA [6:0], Q = \CTRL_REG).
Adding EN signal on $procdff$1269 ($adff) from module EF_TMR32_APB (D = \PWDATA [2:0], Q = \CFG_REG).
Adding EN signal on $procdff$1268 ($adff) from module EF_TMR32_APB (D = \PWDATA [11:0], Q = \PWM0CFG_REG).
Adding EN signal on $procdff$1267 ($adff) from module EF_TMR32_APB (D = \PWDATA [15:0], Q = \PWM1CFG_REG).
Adding EN signal on $procdff$1266 ($adff) from module EF_TMR32_APB (D = \PWDATA [7:0], Q = \PWMDT_REG).
Adding EN signal on $procdff$1265 ($adff) from module EF_TMR32_APB (D = \PWDATA [15:0], Q = \PWMFC_REG).
Adding EN signal on $procdff$1264 ($adff) from module EF_TMR32_APB (D = \PWDATA [2:0], Q = \IM_REG).
Adding EN signal on $procdff$1259 ($adff) from module EF_TMR32_APB (D = $0\RIS_REG[2:0] [0], Q = \RIS_REG [0]).
Adding EN signal on $procdff$1259 ($adff) from module EF_TMR32_APB (D = $0\RIS_REG[2:0] [1], Q = \RIS_REG [1]).
Adding EN signal on $procdff$1259 ($adff) from module EF_TMR32_APB (D = $0\RIS_REG[2:0] [2], Q = \RIS_REG [2]).
Adding EN signal on $flatten\instance_to_wrap.$procdff$1285 ($adff) from module EF_TMR32_APB (D = $flatten\instance_to_wrap.$0\tmr_run[0:0], Q = \instance_to_wrap.tmr_run).
Adding EN signal on $flatten\instance_to_wrap.$procdff$1284 ($adff) from module EF_TMR32_APB (D = $flatten\instance_to_wrap.$procmux$1092_Y, Q = \instance_to_wrap.tmr_reg).
Adding EN signal on $flatten\instance_to_wrap.$procdff$1283 ($adff) from module EF_TMR32_APB (D = $flatten\instance_to_wrap.$0\tmr_dir[0:0], Q = \instance_to_wrap.tmr_dir).
Adding EN signal on $flatten\instance_to_wrap.$procdff$1282 ($adff) from module EF_TMR32_APB (D = $flatten\instance_to_wrap.$procmux$720_Y, Q = \instance_to_wrap.pwm0_reg).
Adding EN signal on $flatten\instance_to_wrap.$procdff$1281 ($adff) from module EF_TMR32_APB (D = $flatten\instance_to_wrap.$procmux$715_Y, Q = \instance_to_wrap.pwm1_reg).
Adding EN signal on $flatten\instance_to_wrap.$procdff$1280 ($adff) from module EF_TMR32_APB (D = $flatten\instance_to_wrap.$procmux$710_Y, Q = \instance_to_wrap.dly_cntr).
Adding EN signal on $flatten\instance_to_wrap.$procdff$1279 ($adff) from module EF_TMR32_APB (D = \instance_to_wrap.pwm0_reg, Q = \instance_to_wrap.pwm0_delayed).
Adding EN signal on $flatten\instance_to_wrap.$procdff$1276 ($adff) from module EF_TMR32_APB (D = $flatten\instance_to_wrap.$0\fault_clr_reg[0:0], Q = \instance_to_wrap.fault_clr_reg).
Adding EN signal on $flatten\instance_to_wrap.$procdff$1275 ($adff) from module EF_TMR32_APB (D = $flatten\instance_to_wrap.$0\fault_reg[0:0], Q = \instance_to_wrap.fault_reg).

27.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \EF_TMR32_APB..
Removed 17 unused cells and 17 unused wires.
<suppressed ~18 debug messages>

27.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module EF_TMR32_APB.
<suppressed ~10 debug messages>

27.9. Rerunning OPT passes. (Maybe there is more to do..)

27.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \EF_TMR32_APB..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~18 debug messages>

27.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \EF_TMR32_APB.
    New ctrl vector for $pmux cell $flatten\instance_to_wrap.$procmux$725: { $flatten\instance_to_wrap.$procmux$728_CMP $flatten\instance_to_wrap.$procmux$727_CMP $flatten\instance_to_wrap.$procmux$726_CMP }
    New ctrl vector for $pmux cell $flatten\instance_to_wrap.$procmux$734: { $flatten\instance_to_wrap.$procmux$737_CMP $flatten\instance_to_wrap.$procmux$736_CMP $flatten\instance_to_wrap.$procmux$735_CMP }
    New ctrl vector for $pmux cell $flatten\instance_to_wrap.$procmux$744: { $flatten\instance_to_wrap.$procmux$747_CMP $flatten\instance_to_wrap.$procmux$746_CMP $flatten\instance_to_wrap.$procmux$745_CMP }
    New ctrl vector for $pmux cell $flatten\instance_to_wrap.$procmux$755: { $flatten\instance_to_wrap.$procmux$758_CMP $flatten\instance_to_wrap.$procmux$757_CMP $flatten\instance_to_wrap.$procmux$756_CMP }
    New ctrl vector for $pmux cell $flatten\instance_to_wrap.$procmux$767: { $flatten\instance_to_wrap.$procmux$770_CMP $flatten\instance_to_wrap.$procmux$769_CMP $flatten\instance_to_wrap.$procmux$768_CMP }
    New ctrl vector for $pmux cell $flatten\instance_to_wrap.$procmux$780: { $flatten\instance_to_wrap.$procmux$783_CMP $flatten\instance_to_wrap.$procmux$782_CMP $flatten\instance_to_wrap.$procmux$781_CMP }
    New ctrl vector for $pmux cell $flatten\instance_to_wrap.$procmux$895: { $flatten\instance_to_wrap.$procmux$898_CMP $flatten\instance_to_wrap.$procmux$897_CMP $flatten\instance_to_wrap.$procmux$896_CMP }
    New ctrl vector for $pmux cell $flatten\instance_to_wrap.$procmux$904: { $flatten\instance_to_wrap.$procmux$907_CMP $flatten\instance_to_wrap.$procmux$906_CMP $flatten\instance_to_wrap.$procmux$905_CMP }
    New ctrl vector for $pmux cell $flatten\instance_to_wrap.$procmux$914: { $flatten\instance_to_wrap.$procmux$917_CMP $flatten\instance_to_wrap.$procmux$916_CMP $flatten\instance_to_wrap.$procmux$915_CMP }
    New ctrl vector for $pmux cell $flatten\instance_to_wrap.$procmux$925: { $flatten\instance_to_wrap.$procmux$928_CMP $flatten\instance_to_wrap.$procmux$927_CMP $flatten\instance_to_wrap.$procmux$926_CMP }
    New ctrl vector for $pmux cell $flatten\instance_to_wrap.$procmux$937: { $flatten\instance_to_wrap.$procmux$940_CMP $flatten\instance_to_wrap.$procmux$939_CMP $flatten\instance_to_wrap.$procmux$938_CMP }
    New ctrl vector for $pmux cell $flatten\instance_to_wrap.$procmux$950: { $flatten\instance_to_wrap.$procmux$953_CMP $flatten\instance_to_wrap.$procmux$952_CMP $flatten\instance_to_wrap.$procmux$951_CMP }
  Optimizing cells in module \EF_TMR32_APB.
Performed a total of 12 changes.

27.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\EF_TMR32_APB'.
<suppressed ~6 debug messages>
Removed a total of 2 cells.

27.13. Executing OPT_DFF pass (perform DFF optimizations).

27.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \EF_TMR32_APB..
Removed 0 unused cells and 2 unused wires.
<suppressed ~1 debug messages>

27.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module EF_TMR32_APB.

27.16. Rerunning OPT passes. (Maybe there is more to do..)

27.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \EF_TMR32_APB..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~18 debug messages>

27.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \EF_TMR32_APB.
Performed a total of 0 changes.

27.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\EF_TMR32_APB'.
Removed a total of 0 cells.

27.20. Executing OPT_DFF pass (perform DFF optimizations).

27.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \EF_TMR32_APB..

27.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module EF_TMR32_APB.

27.23. Finished OPT passes. (There is nothing left to do.)

28. Executing WREDUCE pass (reducing word size of cells).
Removed top 12 bits (of 16) from port B of cell EF_TMR32_APB.$eq$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:104$118 ($eq).
Removed top 12 bits (of 16) from port B of cell EF_TMR32_APB.$eq$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:110$122 ($eq).
Removed top 11 bits (of 16) from port B of cell EF_TMR32_APB.$eq$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:116$126 ($eq).
Removed top 11 bits (of 16) from port B of cell EF_TMR32_APB.$eq$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:128$130 ($eq).
Removed top 11 bits (of 16) from port B of cell EF_TMR32_APB.$eq$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:134$134 ($eq).
Removed top 11 bits (of 16) from port B of cell EF_TMR32_APB.$eq$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:140$138 ($eq).
Removed top 10 bits (of 16) from port B of cell EF_TMR32_APB.$eq$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:146$142 ($eq).
Removed top 10 bits (of 16) from port B of cell EF_TMR32_APB.$eq$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:152$146 ($eq).
Removed top 10 bits (of 16) from port B of cell EF_TMR32_APB.$eq$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:158$150 ($eq).
Removed top 4 bits (of 16) from port B of cell EF_TMR32_APB.$eq$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:167$155 ($eq).
Removed top 4 bits (of 16) from port B of cell EF_TMR32_APB.$eq$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:170$159 ($eq).
Removed top 13 bits (of 16) from port B of cell EF_TMR32_APB.$eq$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:227$168 ($eq).
Removed top 4 bits (of 16) from port B of cell EF_TMR32_APB.$eq$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:238$179 ($eq).
Removed top 4 bits (of 16) from port B of cell EF_TMR32_APB.$eq$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:239$180 ($eq).
Removed top 1 bits (of 3) from port B of cell EF_TMR32_APB.$auto$opt_dff.cc:195:make_patterns_logic$1325 ($ne).
Removed top 1 bits (of 2) from port B of cell EF_TMR32_APB.$flatten\instance_to_wrap.$procmux$953_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell EF_TMR32_APB.$flatten\instance_to_wrap.$procmux$940_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell EF_TMR32_APB.$flatten\instance_to_wrap.$procmux$928_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell EF_TMR32_APB.$flatten\instance_to_wrap.$procmux$917_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell EF_TMR32_APB.$flatten\instance_to_wrap.$procmux$907_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell EF_TMR32_APB.$flatten\instance_to_wrap.$procmux$898_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell EF_TMR32_APB.$flatten\instance_to_wrap.$procmux$783_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell EF_TMR32_APB.$flatten\instance_to_wrap.$procmux$770_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell EF_TMR32_APB.$flatten\instance_to_wrap.$procmux$758_CMP0 ($eq).
Removed top 3 bits (of 4) from port B of cell EF_TMR32_APB.$flatten\instance_to_wrap.$procmux$750_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell EF_TMR32_APB.$flatten\instance_to_wrap.$procmux$747_CMP0 ($eq).
Removed top 3 bits (of 5) from port B of cell EF_TMR32_APB.$flatten\instance_to_wrap.$procmux$740_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell EF_TMR32_APB.$flatten\instance_to_wrap.$procmux$737_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell EF_TMR32_APB.$flatten\instance_to_wrap.$procmux$731_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell EF_TMR32_APB.$flatten\instance_to_wrap.$procmux$728_CMP0 ($eq).
Removed top 31 bits (of 32) from port B of cell EF_TMR32_APB.$flatten\instance_to_wrap.$sub$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:479$624 ($sub).
Removed top 24 bits (of 32) from port Y of cell EF_TMR32_APB.$flatten\instance_to_wrap.$sub$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:479$624 ($sub).
Removed top 31 bits (of 32) from port B of cell EF_TMR32_APB.$flatten\instance_to_wrap.$sub$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:363$498 ($sub).
Removed top 31 bits (of 32) from port B of cell EF_TMR32_APB.$flatten\instance_to_wrap.$add$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:361$497 ($add).
Removed top 1 bits (of 2) from port B of cell EF_TMR32_APB.$flatten\instance_to_wrap.$eq$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:353$490 ($eq).
Removed top 31 bits (of 32) from port B of cell EF_TMR32_APB.$flatten\instance_to_wrap.$eq$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:330$474 ($eq).
Removed top 31 bits (of 32) from port B of cell EF_TMR32_APB.$flatten\instance_to_wrap.$sub$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:329$472 ($sub).
Removed top 31 bits (of 32) from port B of cell EF_TMR32_APB.$flatten\instance_to_wrap.$sub$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:322$469 ($sub).
Removed top 16 bits (of 32) from port Y of cell EF_TMR32_APB.$flatten\instance_to_wrap.$sub$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:322$469 ($sub).
Removed top 16 bits (of 32) from wire EF_TMR32_APB.$flatten\instance_to_wrap.$sub$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:322$469_Y.
Removed top 4 bits (of 32) from wire EF_TMR32_APB.$flatten\instance_to_wrap.$sub$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:329$472_Y.
Removed top 24 bits (of 32) from wire EF_TMR32_APB.$flatten\instance_to_wrap.$sub$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:479$624_Y.

29. Executing PEEPOPT pass (run peephole optimizers).

30. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \EF_TMR32_APB..
Removed 0 unused cells and 3 unused wires.
<suppressed ~1 debug messages>

31. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module EF_TMR32_APB:
  creating $macc model for $flatten\instance_to_wrap.$add$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:361$497 ($add).
  creating $macc model for $flatten\instance_to_wrap.$sub$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:322$469 ($sub).
  creating $macc model for $flatten\instance_to_wrap.$sub$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:329$472 ($sub).
  creating $macc model for $flatten\instance_to_wrap.$sub$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:363$498 ($sub).
  creating $macc model for $flatten\instance_to_wrap.$sub$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:479$624 ($sub).
  creating $alu model for $macc $flatten\instance_to_wrap.$sub$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:479$624.
  creating $alu model for $macc $flatten\instance_to_wrap.$sub$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:363$498.
  creating $alu model for $macc $flatten\instance_to_wrap.$sub$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:329$472.
  creating $alu model for $macc $flatten\instance_to_wrap.$sub$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:322$469.
  creating $alu model for $macc $flatten\instance_to_wrap.$add$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:361$497.
  creating $alu cell for $flatten\instance_to_wrap.$add$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:361$497: $auto$alumacc.cc:485:replace_alu$1382
  creating $alu cell for $flatten\instance_to_wrap.$sub$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:322$469: $auto$alumacc.cc:485:replace_alu$1385
  creating $alu cell for $flatten\instance_to_wrap.$sub$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:329$472: $auto$alumacc.cc:485:replace_alu$1388
  creating $alu cell for $flatten\instance_to_wrap.$sub$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:363$498: $auto$alumacc.cc:485:replace_alu$1391
  creating $alu cell for $flatten\instance_to_wrap.$sub$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/EF_TMR32.pp.v:479$624: $auto$alumacc.cc:485:replace_alu$1394
  created 5 $alu and 0 $macc cells.

32. Executing SHARE pass (SAT-based resource sharing).

33. Executing OPT pass (performing simple optimizations).

33.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module EF_TMR32_APB.

33.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\EF_TMR32_APB'.
Removed a total of 0 cells.

33.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \EF_TMR32_APB..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~18 debug messages>

33.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \EF_TMR32_APB.
Performed a total of 0 changes.

33.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\EF_TMR32_APB'.
Removed a total of 0 cells.

33.6. Executing OPT_DFF pass (perform DFF optimizations).

33.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \EF_TMR32_APB..

33.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module EF_TMR32_APB.

33.9. Finished OPT passes. (There is nothing left to do.)

34. Executing MEMORY pass.

34.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

34.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

34.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

34.4. Executing MEMORY_BMUX2ROM pass (converting muxes to ROMs).

34.5. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

34.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \EF_TMR32_APB..

34.7. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

34.8. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

34.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \EF_TMR32_APB..

34.10. Executing MEMORY_COLLECT pass (generating $mem cells).

35. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \EF_TMR32_APB..

36. Executing OPT pass (performing simple optimizations).

36.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module EF_TMR32_APB.
<suppressed ~37 debug messages>

36.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\EF_TMR32_APB'.
Removed a total of 0 cells.

36.3. Executing OPT_DFF pass (perform DFF optimizations).

36.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \EF_TMR32_APB..
Removed 12 unused cells and 29 unused wires.
<suppressed ~13 debug messages>

36.5. Finished fast OPT passes.

37. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

38. Executing OPT pass (performing simple optimizations).

38.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module EF_TMR32_APB.
<suppressed ~4 debug messages>

38.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\EF_TMR32_APB'.
Removed a total of 0 cells.

38.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \EF_TMR32_APB..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~11 debug messages>

38.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \EF_TMR32_APB.
    Consolidated identical input bits for $mux cell $ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:240$183:
      Old ports: A=32'11011110101011011011111011101111, B={ 29'00000000000000000000000000000 \IC_REG }, Y=$ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:240$183_Y
      New ports: A=4'1111, B={ 1'0 \IC_REG }, Y=$ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:240$183_Y [3:0]
      New connections: $ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:240$183_Y [31:4] = { $ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:240$183_Y [3] $ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:240$183_Y [3] 1'0 $ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:240$183_Y [3] $ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:240$183_Y [3] $ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:240$183_Y [3] $ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:240$183_Y [3] 1'0 $ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:240$183_Y [3] 1'0 $ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:240$183_Y [3] 1'0 $ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:240$183_Y [3] $ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:240$183_Y [3] 1'0 $ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:240$183_Y [3] $ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:240$183_Y [3] 1'0 $ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:240$183_Y [3] $ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:240$183_Y [3] $ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:240$183_Y [3] $ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:240$183_Y [3] $ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:240$183_Y [3] 1'0 $ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:240$183_Y [3] $ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:240$183_Y [3] $ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:240$183_Y [3] 1'0 }
  Optimizing cells in module \EF_TMR32_APB.
    Consolidated identical input bits for $mux cell $ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:239$185:
      Old ports: A=$ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:240$183_Y, B={ 29'00000000000000000000000000000 \RIS_REG }, Y=$ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:239$185_Y
      New ports: A=$ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:240$183_Y [3:0], B={ 1'0 \RIS_REG }, Y=$ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:239$185_Y [3:0]
      New connections: $ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:239$185_Y [31:4] = { $ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:239$185_Y [3] $ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:239$185_Y [3] 1'0 $ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:239$185_Y [3] $ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:239$185_Y [3] $ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:239$185_Y [3] $ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:239$185_Y [3] 1'0 $ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:239$185_Y [3] 1'0 $ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:239$185_Y [3] 1'0 $ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:239$185_Y [3] $ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:239$185_Y [3] 1'0 $ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:239$185_Y [3] $ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:239$185_Y [3] 1'0 $ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:239$185_Y [3] $ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:239$185_Y [3] $ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:239$185_Y [3] $ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:239$185_Y [3] $ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:239$185_Y [3] 1'0 $ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:239$185_Y [3] $ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:239$185_Y [3] $ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:239$185_Y [3] 1'0 }
  Optimizing cells in module \EF_TMR32_APB.
    Consolidated identical input bits for $mux cell $ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:238$187:
      Old ports: A=$ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:239$185_Y, B={ 29'00000000000000000000000000000 \MIS_REG }, Y=$ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:238$187_Y
      New ports: A=$ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:239$185_Y [3:0], B={ 1'0 \MIS_REG }, Y=$ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:238$187_Y [3:0]
      New connections: $ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:238$187_Y [31:4] = { $ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:238$187_Y [3] $ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:238$187_Y [3] 1'0 $ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:238$187_Y [3] $ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:238$187_Y [3] $ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:238$187_Y [3] $ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:238$187_Y [3] 1'0 $ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:238$187_Y [3] 1'0 $ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:238$187_Y [3] 1'0 $ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:238$187_Y [3] $ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:238$187_Y [3] 1'0 $ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:238$187_Y [3] $ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:238$187_Y [3] 1'0 $ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:238$187_Y [3] $ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:238$187_Y [3] $ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:238$187_Y [3] $ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:238$187_Y [3] $ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:238$187_Y [3] 1'0 $ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:238$187_Y [3] $ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:238$187_Y [3] $ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:238$187_Y [3] 1'0 }
  Optimizing cells in module \EF_TMR32_APB.
    Consolidated identical input bits for $mux cell $ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:237$189:
      Old ports: A=$ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:238$187_Y, B={ 29'00000000000000000000000000000 \IM_REG }, Y=$ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:237$189_Y
      New ports: A=$ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:238$187_Y [3:0], B={ 1'0 \IM_REG }, Y=$ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:237$189_Y [3:0]
      New connections: $ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:237$189_Y [31:4] = { $ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:237$189_Y [3] $ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:237$189_Y [3] 1'0 $ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:237$189_Y [3] $ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:237$189_Y [3] $ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:237$189_Y [3] $ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:237$189_Y [3] 1'0 $ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:237$189_Y [3] 1'0 $ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:237$189_Y [3] 1'0 $ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:237$189_Y [3] $ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:237$189_Y [3] 1'0 $ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:237$189_Y [3] $ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:237$189_Y [3] 1'0 $ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:237$189_Y [3] $ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:237$189_Y [3] $ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:237$189_Y [3] $ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:237$189_Y [3] $ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:237$189_Y [3] 1'0 $ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:237$189_Y [3] $ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:237$189_Y [3] $ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:237$189_Y [3] 1'0 }
  Optimizing cells in module \EF_TMR32_APB.
    Consolidated identical input bits for $mux cell $ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:236$191:
      Old ports: A=$ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:237$189_Y, B={ 16'0000000000000000 \PWMFC_REG }, Y=$ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:236$191_Y
      New ports: A={ $ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:237$189_Y [3] $ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:237$189_Y [3] 1'0 $ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:237$189_Y [3] $ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:237$189_Y [3] $ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:237$189_Y [3] $ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:237$189_Y [3] $ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:237$189_Y [3] 1'0 $ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:237$189_Y [3] $ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:237$189_Y [3] $ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:237$189_Y [3] 1'0 $ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:237$189_Y [3:0] }, B={ 1'0 \PWMFC_REG }, Y=$ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:236$191_Y [16:0]
      New connections: $ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:236$191_Y [31:17] = { $ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:236$191_Y [16] $ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:236$191_Y [16] 1'0 $ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:236$191_Y [16] $ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:236$191_Y [16] $ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:236$191_Y [16] $ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:236$191_Y [16] 1'0 $ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:236$191_Y [16] 1'0 $ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:236$191_Y [16] 1'0 $ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:236$191_Y [16] $ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:236$191_Y [16] 1'0 }
  Optimizing cells in module \EF_TMR32_APB.
    Consolidated identical input bits for $mux cell $ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:235$193:
      Old ports: A=$ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:236$191_Y, B={ 24'000000000000000000000000 \PWMDT_REG }, Y=$ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:235$193_Y
      New ports: A=$ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:236$191_Y [16:0], B={ 9'000000000 \PWMDT_REG }, Y=$ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:235$193_Y [16:0]
      New connections: $ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:235$193_Y [31:17] = { $ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:235$193_Y [16] $ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:235$193_Y [16] 1'0 $ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:235$193_Y [16] $ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:235$193_Y [16] $ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:235$193_Y [16] $ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:235$193_Y [16] 1'0 $ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:235$193_Y [16] 1'0 $ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:235$193_Y [16] 1'0 $ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:235$193_Y [16] $ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:235$193_Y [16] 1'0 }
  Optimizing cells in module \EF_TMR32_APB.
    Consolidated identical input bits for $mux cell $ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:234$195:
      Old ports: A=$ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:235$193_Y, B={ 16'0000000000000000 \PWM1CFG_REG }, Y=$ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:234$195_Y
      New ports: A=$ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:235$193_Y [16:0], B={ 1'0 \PWM1CFG_REG }, Y=$ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:234$195_Y [16:0]
      New connections: $ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:234$195_Y [31:17] = { $ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:234$195_Y [16] $ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:234$195_Y [16] 1'0 $ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:234$195_Y [16] $ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:234$195_Y [16] $ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:234$195_Y [16] $ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:234$195_Y [16] 1'0 $ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:234$195_Y [16] 1'0 $ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:234$195_Y [16] 1'0 $ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:234$195_Y [16] $ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:234$195_Y [16] 1'0 }
  Optimizing cells in module \EF_TMR32_APB.
    Consolidated identical input bits for $mux cell $ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:233$197:
      Old ports: A=$ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:234$195_Y, B={ 20'00000000000000000000 \PWM0CFG_REG }, Y=$ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:233$197_Y
      New ports: A=$ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:234$195_Y [16:0], B={ 5'00000 \PWM0CFG_REG }, Y=$ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:233$197_Y [16:0]
      New connections: $ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:233$197_Y [31:17] = { $ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:233$197_Y [16] $ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:233$197_Y [16] 1'0 $ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:233$197_Y [16] $ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:233$197_Y [16] $ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:233$197_Y [16] $ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:233$197_Y [16] 1'0 $ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:233$197_Y [16] 1'0 $ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:233$197_Y [16] 1'0 $ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:233$197_Y [16] $ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:233$197_Y [16] 1'0 }
  Optimizing cells in module \EF_TMR32_APB.
    Consolidated identical input bits for $mux cell $ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:232$199:
      Old ports: A=$ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:233$197_Y, B={ 29'00000000000000000000000000000 \CFG_REG }, Y=$ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:232$199_Y
      New ports: A=$ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:233$197_Y [16:0], B={ 14'00000000000000 \CFG_REG }, Y=$ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:232$199_Y [16:0]
      New connections: $ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:232$199_Y [31:17] = { $ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:232$199_Y [16] $ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:232$199_Y [16] 1'0 $ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:232$199_Y [16] $ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:232$199_Y [16] $ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:232$199_Y [16] $ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:232$199_Y [16] 1'0 $ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:232$199_Y [16] 1'0 $ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:232$199_Y [16] 1'0 $ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:232$199_Y [16] $ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:232$199_Y [16] 1'0 }
  Optimizing cells in module \EF_TMR32_APB.
    Consolidated identical input bits for $mux cell $ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:231$201:
      Old ports: A=$ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:232$199_Y, B={ 25'0000000000000000000000000 \CTRL_REG }, Y=$ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:231$201_Y
      New ports: A=$ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:232$199_Y [16:0], B={ 10'0000000000 \CTRL_REG }, Y=$ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:231$201_Y [16:0]
      New connections: $ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:231$201_Y [31:17] = { $ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:231$201_Y [16] $ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:231$201_Y [16] 1'0 $ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:231$201_Y [16] $ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:231$201_Y [16] $ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:231$201_Y [16] $ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:231$201_Y [16] 1'0 $ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:231$201_Y [16] 1'0 $ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:231$201_Y [16] 1'0 $ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:231$201_Y [16] $ternary$/home/nouran/EF_TMR32/verify/uvm-python/../../hdl/rtl/bus_wrappers/EF_TMR32_APB.pp.v:231$201_Y [16] 1'0 }
  Optimizing cells in module \EF_TMR32_APB.
Performed a total of 10 changes.

38.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\EF_TMR32_APB'.
Removed a total of 0 cells.

38.6. Executing OPT_SHARE pass.

38.7. Executing OPT_DFF pass (perform DFF optimizations).

38.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \EF_TMR32_APB..

38.9. Executing OPT_EXPR pass (perform const folding).
Optimizing module EF_TMR32_APB.

38.10. Rerunning OPT passes. (Maybe there is more to do..)

38.11. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \EF_TMR32_APB..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~11 debug messages>

38.12. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \EF_TMR32_APB.
Performed a total of 0 changes.

38.13. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\EF_TMR32_APB'.
Removed a total of 0 cells.

38.14. Executing OPT_SHARE pass.

38.15. Executing OPT_DFF pass (perform DFF optimizations).

38.16. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \EF_TMR32_APB..

38.17. Executing OPT_EXPR pass (perform const folding).
Optimizing module EF_TMR32_APB.

38.18. Finished OPT passes. (There is nothing left to do.)

39. Executing TECHMAP pass (map to technology primitives).

39.1. Executing Verilog-2005 frontend: /nix/store/vn1kmwhr52wisnfkmn6fk9g15p3klzs0-yosys/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nix/store/vn1kmwhr52wisnfkmn6fk9g15p3klzs0-yosys/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

39.2. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $eq.
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper simplemap for cells of type $logic_not.
Using extmapper simplemap for cells of type $adffe.
Using extmapper simplemap for cells of type $reduce_bool.
Using extmapper simplemap for cells of type $ne.
Using extmapper simplemap for cells of type $adff.
Using extmapper simplemap for cells of type $reduce_and.
Using template $paramod$6a42b6fefed750f8a1c58eab59479d960557103c\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $dff.
Using extmapper simplemap for cells of type $or.
Using template $paramod$c5c783b17ab1d780abfad8cfe6563a0a7b47a3b0\_90_pmux for cells of type $pmux.
Using template $paramod$2407ada40cc3dda6c6015be2b49b748cddb5a800\_90_pmux for cells of type $pmux.
Using extmapper simplemap for cells of type $logic_and.
Using extmapper simplemap for cells of type $xor.
Using template $paramod$403a3c2fa431a154c52a6a5429d7a6260b5d144f\_90_alu for cells of type $alu.
Using template $paramod$a1665ef28c749ebcdbe9aecd466e644647b56463\_90_alu for cells of type $alu.
Using template $paramod$c04af8dbf0e5d1d69bbccb2c7bd8a93fc9ef54dc\_90_alu for cells of type $alu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000100000 for cells of type $lcu.
Using extmapper simplemap for cells of type $pos.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000001000 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000010000 for cells of type $lcu.
No more expansions possible.
<suppressed ~1418 debug messages>

40. Executing OPT pass (performing simple optimizations).

40.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module EF_TMR32_APB.
<suppressed ~1524 debug messages>

40.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\EF_TMR32_APB'.
<suppressed ~912 debug messages>
Removed a total of 304 cells.

40.3. Executing OPT_DFF pass (perform DFF optimizations).

40.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \EF_TMR32_APB..
Removed 67 unused cells and 825 unused wires.
<suppressed ~68 debug messages>

40.5. Finished fast OPT passes.

41. Executing ABC pass (technology mapping using ABC).

41.1. Extracting gate netlist of module `\EF_TMR32_APB' to `<abc-temp-dir>/input.blif'..
Extracted 1985 gates and 2259 wires to a netlist network with 272 inputs and 128 outputs.

41.1.1. Executing ABC.
Running ABC command: "/nix/store/5bgsgwzww9f2z7wl7kga42xrf1vpmnql-yosys-abc/bin/abc" -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

41.1.2. Re-integrating ABC results.
ABC RESULTS:             ORNOT cells:       34
ABC RESULTS:                OR cells:      376
ABC RESULTS:              XNOR cells:       10
ABC RESULTS:               XOR cells:      234
ABC RESULTS:               NOT cells:      125
ABC RESULTS:               NOR cells:       88
ABC RESULTS:               MUX cells:      446
ABC RESULTS:            ANDNOT cells:      385
ABC RESULTS:               AND cells:       46
ABC RESULTS:              NAND cells:       54
ABC RESULTS:        internal signals:     1859
ABC RESULTS:           input signals:      272
ABC RESULTS:          output signals:      128
Removing temp directory.

42. Executing OPT pass (performing simple optimizations).

42.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module EF_TMR32_APB.
<suppressed ~91 debug messages>

42.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\EF_TMR32_APB'.
<suppressed ~123 debug messages>
Removed a total of 41 cells.

42.3. Executing OPT_DFF pass (perform DFF optimizations).

42.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \EF_TMR32_APB..
Removed 3 unused cells and 1059 unused wires.
<suppressed ~18 debug messages>

42.5. Finished fast OPT passes.

43. Executing HIERARCHY pass (managing design hierarchy).

43.1. Analyzing design hierarchy..
Top module:  \EF_TMR32_APB

43.2. Analyzing design hierarchy..
Top module:  \EF_TMR32_APB
Removed 0 unused modules.

44. Printing statistics.

=== EF_TMR32_APB ===

   Number of wires:               1834
   Number of wire bits:           2568
   Number of public wires:         120
   Number of public wire bits:     850
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               2003
     $_ANDNOT_                     384
     $_AND_                         45
     $_DFFE_PN0P_                  226
     $_DFFE_PN1P_                    1
     $_DFF_PN0_                     20
     $_DFF_PN1_                      1
     $_DFF_P_                        1
     $_MUX_                        446
     $_NAND_                        54
     $_NOR_                         63
     $_NOT_                        122
     $_ORNOT_                       34
     $_OR_                         363
     $_XNOR_                         9
     $_XOR_                        234

45. Executing CHECK pass (checking for obvious problems).
Checking module EF_TMR32_APB...
Found and reported 0 problems.

46. Generating Graphviz representation of design.
Writing dot description to `/home/nouran/EF_TMR32/verify/uvm-python/sim/default_tag/openlane_run/3-yosys-synthesis/post_techmap.dot'.
Dumping module EF_TMR32_APB to page 1.

47. Executing SHARE pass (SAT-based resource sharing).

48. Executing OPT pass (performing simple optimizations).

48.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module EF_TMR32_APB.

48.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\EF_TMR32_APB'.
Removed a total of 0 cells.

48.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \EF_TMR32_APB..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

48.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \EF_TMR32_APB.
Performed a total of 0 changes.

48.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\EF_TMR32_APB'.
Removed a total of 0 cells.

48.6. Executing OPT_DFF pass (perform DFF optimizations).

48.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \EF_TMR32_APB..

48.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module EF_TMR32_APB.

48.9. Finished OPT passes. (There is nothing left to do.)

49. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \EF_TMR32_APB..
Removed 0 unused cells and 71 unused wires.
<suppressed ~71 debug messages>
{
   "creator": "Yosys 0.38 (git sha1 543faed9c8c, clang++ 16.0.6 -fPIC -Os)",
   "invocation": "stat -json -liberty /home/nouran/EF_TMR32/verify/uvm-python/sim/default_tag/openlane_run/tmp/5d0d045e000847feaa88701212888717.lib ",
   "modules": {
      "\\EF_TMR32_APB": {
         "num_wires":         1763,
         "num_wire_bits":     2088,
         "num_pub_wires":     49,
         "num_pub_wire_bits": 370,
         "num_memories":      0,
         "num_memory_bits":   0,
         "num_processes":     0,
         "num_cells":         2003,
         "num_cells_by_type": {
            "$_ANDNOT_": 384,
            "$_AND_": 45,
            "$_DFFE_PN0P_": 226,
            "$_DFFE_PN1P_": 1,
            "$_DFF_PN0_": 20,
            "$_DFF_PN1_": 1,
            "$_DFF_P_": 1,
            "$_MUX_": 446,
            "$_NAND_": 54,
            "$_NOR_": 63,
            "$_NOT_": 122,
            "$_ORNOT_": 34,
            "$_OR_": 363,
            "$_XNOR_": 9,
            "$_XOR_": 234
         }
      }
   },
      "design": {
         "num_wires":         1763,
         "num_wire_bits":     2088,
         "num_pub_wires":     49,
         "num_pub_wire_bits": 370,
         "num_memories":      0,
         "num_memory_bits":   0,
         "num_processes":     0,
         "num_cells":         2003,
         "num_cells_by_type": {
            "$_ANDNOT_": 384,
            "$_AND_": 45,
            "$_DFFE_PN0P_": 226,
            "$_DFFE_PN1P_": 1,
            "$_DFF_PN0_": 20,
            "$_DFF_PN1_": 1,
            "$_DFF_P_": 1,
            "$_MUX_": 446,
            "$_NAND_": 54,
            "$_NOR_": 63,
            "$_NOT_": 122,
            "$_ORNOT_": 34,
            "$_OR_": 363,
            "$_XNOR_": 9,
            "$_XOR_": 234
         }
      }
}

50. Printing statistics.

=== EF_TMR32_APB ===

   Number of wires:               1763
   Number of wire bits:           2088
   Number of public wires:          49
   Number of public wire bits:     370
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               2003
     $_ANDNOT_                     384
     $_AND_                         45
     $_DFFE_PN0P_                  226
     $_DFFE_PN1P_                    1
     $_DFF_PN0_                     20
     $_DFF_PN1_                      1
     $_DFF_P_                        1
     $_MUX_                        446
     $_NAND_                        54
     $_NOR_                         63
     $_NOT_                        122
     $_ORNOT_                       34
     $_OR_                         363
     $_XNOR_                         9
     $_XOR_                        234

   Area for cell type $_NOT_ is unknown!
   Area for cell type $_AND_ is unknown!
   Area for cell type $_NAND_ is unknown!
   Area for cell type $_OR_ is unknown!
   Area for cell type $_NOR_ is unknown!
   Area for cell type $_XOR_ is unknown!
   Area for cell type $_XNOR_ is unknown!
   Area for cell type $_ANDNOT_ is unknown!
   Area for cell type $_ORNOT_ is unknown!
   Area for cell type $_MUX_ is unknown!
   Area for cell type $_DFF_P_ is unknown!
   Area for cell type $_DFF_PN0_ is unknown!
   Area for cell type $_DFF_PN1_ is unknown!
   Area for cell type $_DFFE_PN0P_ is unknown!
   Area for cell type $_DFFE_PN1P_ is unknown!

mapping tbuf
[INFO] Applying tri-state buffer mapping from '/home/nouran/.volare/volare/sky130/versions/bdc9412b3e468c102d01b7cf6337be06ec6e9c9a/sky130A/libs.tech/openlane/sky130_fd_sc_hd/tribuff_map.v'â¦

51. Executing TECHMAP pass (map to technology primitives).

51.1. Executing Verilog-2005 frontend: /home/nouran/.volare/volare/sky130/versions/bdc9412b3e468c102d01b7cf6337be06ec6e9c9a/sky130A/libs.tech/openlane/sky130_fd_sc_hd/tribuff_map.v
Parsing Verilog input from `/home/nouran/.volare/volare/sky130/versions/bdc9412b3e468c102d01b7cf6337be06ec6e9c9a/sky130A/libs.tech/openlane/sky130_fd_sc_hd/tribuff_map.v' to AST representation.
Generating RTLIL representation for module `\$_TBUF_'.
Successfully finished Verilog frontend.

51.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~3 debug messages>

52. Executing SIMPLEMAP pass (map simple cells to gate primitives).
[INFO] Applying latch mapping from '/home/nouran/.volare/volare/sky130/versions/bdc9412b3e468c102d01b7cf6337be06ec6e9c9a/sky130A/libs.tech/openlane/sky130_fd_sc_hd/latch_map.v'â¦

53. Executing TECHMAP pass (map to technology primitives).

53.1. Executing Verilog-2005 frontend: /home/nouran/.volare/volare/sky130/versions/bdc9412b3e468c102d01b7cf6337be06ec6e9c9a/sky130A/libs.tech/openlane/sky130_fd_sc_hd/latch_map.v
Parsing Verilog input from `/home/nouran/.volare/volare/sky130/versions/bdc9412b3e468c102d01b7cf6337be06ec6e9c9a/sky130A/libs.tech/openlane/sky130_fd_sc_hd/latch_map.v' to AST representation.
Generating RTLIL representation for module `\$_DLATCH_P_'.
Generating RTLIL representation for module `\$_DLATCH_N_'.
Successfully finished Verilog frontend.

53.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

54. Executing SIMPLEMAP pass (map simple cells to gate primitives).

55. Executing DFFLIBMAP pass (mapping DFF cells to sequential cells from liberty file).
  cell sky130_fd_sc_hd__dfxtp_2 (noninv, pins=3, area=21.27) is a direct match for cell type $_DFF_P_.
  cell sky130_fd_sc_hd__dfrtp_2 (noninv, pins=4, area=26.28) is a direct match for cell type $_DFF_PN0_.
  cell sky130_fd_sc_hd__dfstp_2 (noninv, pins=4, area=26.28) is a direct match for cell type $_DFF_PN1_.
  cell sky130_fd_sc_hd__dfbbn_2 (noninv, pins=6, area=35.03) is a direct match for cell type $_DFFSR_NNN_.
  final dff cell mappings:
    unmapped dff cell: $_DFF_N_
    \sky130_fd_sc_hd__dfxtp_2 _DFF_P_ (.CLK( C), .D( D), .Q( Q));
    unmapped dff cell: $_DFF_NN0_
    unmapped dff cell: $_DFF_NN1_
    unmapped dff cell: $_DFF_NP0_
    unmapped dff cell: $_DFF_NP1_
    \sky130_fd_sc_hd__dfrtp_2 _DFF_PN0_ (.CLK( C), .D( D), .Q( Q), .RESET_B( R));
    \sky130_fd_sc_hd__dfstp_2 _DFF_PN1_ (.CLK( C), .D( D), .Q( Q), .SET_B( R));
    unmapped dff cell: $_DFF_PP0_
    unmapped dff cell: $_DFF_PP1_
    \sky130_fd_sc_hd__dfbbn_2 _DFFSR_NNN_ (.CLK_N( C), .D( D), .Q( Q), .Q_N(~Q), .RESET_B( R), .SET_B( S));
    unmapped dff cell: $_DFFSR_NNP_
    unmapped dff cell: $_DFFSR_NPN_
    unmapped dff cell: $_DFFSR_NPP_
    unmapped dff cell: $_DFFSR_PNN_
    unmapped dff cell: $_DFFSR_PNP_
    unmapped dff cell: $_DFFSR_PPN_
    unmapped dff cell: $_DFFSR_PPP_

55.1. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).
Mapping DFF cells in module `\EF_TMR32_APB':
  mapped 246 $_DFF_PN0_ cells to \sky130_fd_sc_hd__dfrtp_2 cells.
  mapped 2 $_DFF_PN1_ cells to \sky130_fd_sc_hd__dfstp_2 cells.
  mapped 1 $_DFF_P_ cells to \sky130_fd_sc_hd__dfxtp_2 cells.
{
   "creator": "Yosys 0.38 (git sha1 543faed9c8c, clang++ 16.0.6 -fPIC -Os)",
   "invocation": "stat -json -liberty /home/nouran/EF_TMR32/verify/uvm-python/sim/default_tag/openlane_run/tmp/5d0d045e000847feaa88701212888717.lib ",
   "modules": {
      "\\EF_TMR32_APB": {
         "num_wires":         1990,
         "num_wire_bits":     2315,
         "num_pub_wires":     49,
         "num_pub_wire_bits": 370,
         "num_memories":      0,
         "num_memory_bits":   0,
         "num_processes":     0,
         "num_cells":         2230,
         "area":              6537.520000,
         "num_cells_by_type": {
            "$_ANDNOT_": 384,
            "$_AND_": 45,
            "$_MUX_": 673,
            "$_NAND_": 54,
            "$_NOR_": 63,
            "$_NOT_": 122,
            "$_ORNOT_": 34,
            "$_OR_": 363,
            "$_XNOR_": 9,
            "$_XOR_": 234,
            "sky130_fd_sc_hd__dfrtp_2": 246,
            "sky130_fd_sc_hd__dfstp_2": 2,
            "sky130_fd_sc_hd__dfxtp_2": 1
         }
      }
   },
      "design": {
         "num_wires":         1990,
         "num_wire_bits":     2315,
         "num_pub_wires":     49,
         "num_pub_wire_bits": 370,
         "num_memories":      0,
         "num_memory_bits":   0,
         "num_processes":     0,
         "num_cells":         2230,
         "area":              6537.520000,
         "num_cells_by_type": {
            "$_ANDNOT_": 384,
            "$_AND_": 45,
            "$_MUX_": 673,
            "$_NAND_": 54,
            "$_NOR_": 63,
            "$_NOT_": 122,
            "$_ORNOT_": 34,
            "$_OR_": 363,
            "$_XNOR_": 9,
            "$_XOR_": 234,
            "sky130_fd_sc_hd__dfrtp_2": 246,
            "sky130_fd_sc_hd__dfstp_2": 2,
            "sky130_fd_sc_hd__dfxtp_2": 1
         }
      }
}

56. Printing statistics.

=== EF_TMR32_APB ===

   Number of wires:               1990
   Number of wire bits:           2315
   Number of public wires:          49
   Number of public wire bits:     370
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               2230
     $_ANDNOT_                     384
     $_AND_                         45
     $_MUX_                        673
     $_NAND_                        54
     $_NOR_                         63
     $_NOT_                        122
     $_ORNOT_                       34
     $_OR_                         363
     $_XNOR_                         9
     $_XOR_                        234
     sky130_fd_sc_hd__dfrtp_2      246
     sky130_fd_sc_hd__dfstp_2        2
     sky130_fd_sc_hd__dfxtp_2        1

   Area for cell type $_NOT_ is unknown!
   Area for cell type $_AND_ is unknown!
   Area for cell type $_NAND_ is unknown!
   Area for cell type $_OR_ is unknown!
   Area for cell type $_NOR_ is unknown!
   Area for cell type $_XOR_ is unknown!
   Area for cell type $_XNOR_ is unknown!
   Area for cell type $_ANDNOT_ is unknown!
   Area for cell type $_ORNOT_ is unknown!
   Area for cell type $_MUX_ is unknown!

   Chip area for module '\EF_TMR32_APB': 6537.520000

[INFO] USING STRATEGY AREA 0

57. Executing ABC pass (technology mapping using ABC).

57.1. Extracting gate netlist of module `\EF_TMR32_APB' to `/tmp/yosys-abc-Ajd3Fr/input.blif'..
Extracted 1981 gates and 2282 wires to a netlist network with 301 inputs and 284 outputs.

57.1.1. Executing ABC.
Running ABC command: "/nix/store/5bgsgwzww9f2z7wl7kga42xrf1vpmnql-yosys-abc/bin/abc" -s -f /tmp/yosys-abc-Ajd3Fr/abc.script 2>&1
ABC: ABC command line: "source /tmp/yosys-abc-Ajd3Fr/abc.script".
ABC: 
ABC: + read_blif /tmp/yosys-abc-Ajd3Fr/input.blif 
ABC: + read_lib -w /home/nouran/EF_TMR32/verify/uvm-python/sim/default_tag/openlane_run/tmp/5d0d045e000847feaa88701212888717.lib 
ABC: Parsing finished successfully.  Parsing time =     0.03 sec
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfbbn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrtp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfsbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfstp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfstp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxtp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtn_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtp_1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_2".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_4".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_8".
ABC: Library "sky130_fd_sc_hd__tt_025C_1v80" from "/home/nouran/EF_TMR32/verify/uvm-python/sim/default_tag/openlane_run/tmp/5d0d045e000847feaa88701212888717.lib" has 175 cells (17 skipped: 14 seq; 3 tri-state; 0 no func; 0 dont_use).  Time =     0.04 sec
ABC: Memory =    9.54 MB. Time =     0.04 sec
ABC: Warning: Detected 2 multi-output gates (for example, "sky130_fd_sc_hd__fa_1").
ABC: + read_constr -v /home/nouran/EF_TMR32/verify/uvm-python/sim/default_tag/openlane_run/3-yosys-synthesis/synthesis.sdc 
ABC: Setting driving cell to be "sky130_fd_sc_hd__inv_2/Y".
ABC: Setting output load to be 33.442001.
ABC: + read_constr /home/nouran/EF_TMR32/verify/uvm-python/sim/default_tag/openlane_run/3-yosys-synthesis/synthesis.sdc 
ABC: + fx 
ABC: + mfs 
ABC: + strash 
ABC: + drf -l 
ABC: + balance 
ABC: + drw -l 
ABC: + drf -l 
ABC: + balance 
ABC: + drw -l 
ABC: + drw -l -z 
ABC: + balance 
ABC: + drf -l -z 
ABC: + drw -l -z 
ABC: + balance 
ABC: + retime -D -D 10000 -M 5 
ABC: + scleanup 
ABC: Error: The network is combinational.
ABC: + fraig_store 
ABC: + balance 
ABC: + fraig_store 
ABC: + balance 
ABC: + drw -l 
ABC: + drf -l 
ABC: + balance 
ABC: + drw -l 
ABC: + drw -l -z 
ABC: + balance 
ABC: + drf -l -z 
ABC: + drw -l -z 
ABC: + balance 
ABC: + fraig_store 
ABC: + balance 
ABC: + drw -l 
ABC: + drf -l 
ABC: + balance 
ABC: + drw -l 
ABC: + drw -l -z 
ABC: + balance 
ABC: + drf -l -z 
ABC: + drw -l -z 
ABC: + balance 
ABC: + fraig_store 
ABC: + balance 
ABC: + drw -l 
ABC: + drf -l 
ABC: + balance 
ABC: + drw -l 
ABC: + drw -l -z 
ABC: + balance 
ABC: + drf -l -z 
ABC: + drw -l -z 
ABC: + balance 
ABC: + fraig_store 
ABC: + fraig_restore 
ABC: + amap -m -Q 0.1 -F 20 -A 20 -C 5000 
ABC: + retime -D -D 10000 
ABC: + &get -n 
ABC: + &st 
ABC: + &dch 
ABC: + &nf 
ABC: + &put 
ABC: + 
ABC: + stime -p 
ABC: Cannot find the default PI driving cell (sky130_fd_sc_hd__inv_2/Y) in the library.
ABC: WireLoad = "none"  Gates =   1184 (  4.1 %)   Cap = 13.1 ff (  5.0 %)   Area =    11320.86 ( 78.0 %)   Delay =  6886.92 ps  (  3.0 %)               
ABC: Path  0 --      40 : 0    7 pi                        A =   0.00  Df =   0.0   -0.0 ps  S =   0.0 ps  Cin =  0.0 ff  Cout =  25.0 ff  Cmax =   0.0 ff  G =    0  
ABC: Path  1 --    1300 : 4    5 sky130_fd_sc_hd__or4_2    A =   8.76  Df = 725.5 -584.3 ps  S = 153.2 ps  Cin =  1.5 ff  Cout =  17.6 ff  Cmax = 310.4 ff  G = 1113  
ABC: Path  2 --    1302 : 4    4 sky130_fd_sc_hd__or4_2    A =   8.76  Df =1327.4-1042.7 ps  S = 124.7 ps  Cin =  1.5 ff  Cout =   9.2 ff  Cmax = 310.4 ff  G =  575  
ABC: Path  3 --    1305 : 4    4 sky130_fd_sc_hd__or4_2    A =   8.76  Df =1945.2-1518.6 ps  S = 141.7 ps  Cin =  1.5 ff  Cout =  12.8 ff  Cmax = 310.4 ff  G =  826  
ABC: Path  4 --    1308 : 4    5 sky130_fd_sc_hd__or4_2    A =   8.76  Df =2585.0-1996.5 ps  S = 152.3 ps  Cin =  1.5 ff  Cout =  16.8 ff  Cmax = 310.4 ff  G = 1076  
ABC: Path  5 --    1310 : 4    4 sky130_fd_sc_hd__or4_2    A =   8.76  Df =3281.6-2535.1 ps  S = 141.7 ps  Cin =  1.5 ff  Cout =  12.8 ff  Cmax = 310.4 ff  G =  826  
ABC: Path  6 --    1313 : 4    4 sky130_fd_sc_hd__or4_2    A =   8.76  Df =3911.7-3012.6 ps  S = 145.9 ps  Cin =  1.5 ff  Cout =  14.1 ff  Cmax = 310.4 ff  G =  907  
ABC: Path  7 --    1315 : 4    6 sky130_fd_sc_hd__or4_2    A =   8.76  Df =4628.1-3555.1 ps  S = 156.2 ps  Cin =  1.5 ff  Cout =  19.0 ff  Cmax = 310.4 ff  G = 1195  
ABC: Path  8 --    1317 : 3    5 sky130_fd_sc_hd__or3_2    A =   7.51  Df =5140.6-3920.0 ps  S =  98.8 ps  Cin =  1.5 ff  Cout =   9.7 ff  Cmax = 310.4 ff  G =  599  
ABC: Path  9 --    1319 : 4    1 sky130_fd_sc_hd__o31a_2   A =  10.01  Df =5425.6-4095.9 ps  S =  45.6 ps  Cin =  2.3 ff  Cout =   1.5 ff  Cmax = 285.7 ff  G =   60  
ABC: Path 10 --    1371 : 4    1 sky130_fd_sc_hd__or4_2    A =   8.76  Df =6063.3-1190.4 ps  S =  91.1 ps  Cin =  1.5 ff  Cout =   1.6 ff  Cmax = 310.4 ff  G =   99  
ABC: Path 11 --    1375 : 4    2 sky130_fd_sc_hd__and4bb_2 A =  12.51  Df =6375.6 -200.7 ps  S =  64.9 ps  Cin =  1.5 ff  Cout =   5.0 ff  Cmax = 270.1 ff  G =  316  
ABC: Path 12 --    1668 : 4    1 sky130_fd_sc_hd__o22a_2   A =  10.01  Df =6511.2 -141.7 ps  S =  39.3 ps  Cin =  2.4 ff  Cout =   3.5 ff  Cmax = 304.9 ff  G =  144  
ABC: Path 13 --    1670 : 3    1 sky130_fd_sc_hd__mux2_1   A =  11.26  Df =6886.9  -62.6 ps  S = 300.0 ps  Cin =  2.3 ff  Cout =  33.4 ff  Cmax = 173.0 ff  G = 1465  
ABC: Start-point = pi39 (\instance_to_wrap.tmr_reload [0]).  End-point = po270 ($auto$rtlil.cc:2684:MuxGate$8499).
ABC: + print_stats -m 
ABC: netlist                       : i/o =  301/  284  lat =    0  nd =  1184  edge =   3645  area =11322.13  delay =13.00  lev = 13
ABC: + write_blif /tmp/yosys-abc-Ajd3Fr/output.blif 

57.1.2. Re-integrating ABC results.
ABC RESULTS:   sky130_fd_sc_hd__nor4_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__nand4_2 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__a211o_2 cells:        5
ABC RESULTS:   sky130_fd_sc_hd__inv_2 cells:       49
ABC RESULTS:   sky130_fd_sc_hd__nand4b_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__o21ba_2 cells:        5
ABC RESULTS:   sky130_fd_sc_hd__o221ai_2 cells:        5
ABC RESULTS:   sky130_fd_sc_hd__o2111a_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__o211a_2 cells:       24
ABC RESULTS:   sky130_fd_sc_hd__a41o_2 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__o221a_2 cells:       25
ABC RESULTS:   sky130_fd_sc_hd__nor3_2 cells:        6
ABC RESULTS:   sky130_fd_sc_hd__o211ai_2 cells:        3
ABC RESULTS:   sky130_fd_sc_hd__a22oi_2 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__xor2_2 cells:       42
ABC RESULTS:   sky130_fd_sc_hd__a32o_2 cells:       23
ABC RESULTS:   sky130_fd_sc_hd__o31ai_2 cells:        3
ABC RESULTS:   sky130_fd_sc_hd__nand3_2 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__and4_2 cells:       15
ABC RESULTS:   sky130_fd_sc_hd__nand2b_2 cells:        3
ABC RESULTS:   sky130_fd_sc_hd__a221o_2 cells:       53
ABC RESULTS:   sky130_fd_sc_hd__o2bb2a_2 cells:       15
ABC RESULTS:   sky130_fd_sc_hd__a2bb2o_2 cells:        9
ABC RESULTS:   sky130_fd_sc_hd__o32a_2 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__o22a_2 cells:       32
ABC RESULTS:   sky130_fd_sc_hd__o41a_2 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__and3b_2 cells:        3
ABC RESULTS:   sky130_fd_sc_hd__or3b_2 cells:        7
ABC RESULTS:   sky130_fd_sc_hd__a311oi_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__nand3b_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__and2_2 cells:       31
ABC RESULTS:   sky130_fd_sc_hd__or4bb_2 cells:        4
ABC RESULTS:   sky130_fd_sc_hd__o311a_2 cells:        4
ABC RESULTS:   sky130_fd_sc_hd__and3_2 cells:       16
ABC RESULTS:   sky130_fd_sc_hd__a211oi_2 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__a21bo_2 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__a21oi_2 cells:       27
ABC RESULTS:   sky130_fd_sc_hd__or3_2 cells:       26
ABC RESULTS:   sky130_fd_sc_hd__or2_2 cells:       67
ABC RESULTS:   sky130_fd_sc_hd__or4b_2 cells:       17
ABC RESULTS:   sky130_fd_sc_hd__xnor2_2 cells:       36
ABC RESULTS:   sky130_fd_sc_hd__o21a_2 cells:       50
ABC RESULTS:   sky130_fd_sc_hd__or4_2 cells:       55
ABC RESULTS:   sky130_fd_sc_hd__o31a_2 cells:        6
ABC RESULTS:   sky130_fd_sc_hd__o21bai_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__o21ai_2 cells:       19
ABC RESULTS:   sky130_fd_sc_hd__a22o_2 cells:       63
ABC RESULTS:   sky130_fd_sc_hd__mux2_1 cells:      208
ABC RESULTS:   sky130_fd_sc_hd__and4bb_2 cells:        4
ABC RESULTS:   sky130_fd_sc_hd__and2b_2 cells:        7
ABC RESULTS:   sky130_fd_sc_hd__nor2_2 cells:       83
ABC RESULTS:   sky130_fd_sc_hd__and4b_2 cells:        3
ABC RESULTS:   sky130_fd_sc_hd__a31o_2 cells:       17
ABC RESULTS:   sky130_fd_sc_hd__nand2_2 cells:       59
ABC RESULTS:   sky130_fd_sc_hd__a21o_2 cells:       33
ABC RESULTS:        internal signals:     1697
ABC RESULTS:           input signals:      301
ABC RESULTS:          output signals:      284
Removing temp directory.

58. Executing SETUNDEF pass (replace undef values with defined constants).

59. Executing HILOMAP pass (mapping to constant drivers).
Warning: Selection "sky130_fd_sc_hd__conb_1" did not match any module.
Warning: Selection "LO" did not match any object.

60. Executing SPLITNETS pass (splitting up multi-bit signals).

61. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \EF_TMR32_APB..
Removed 0 unused cells and 2295 unused wires.
<suppressed ~14 debug messages>

62. Executing INSBUF pass (insert buffer cells for connected wires).
Add EF_TMR32_APB/$auto$insbuf.cc:97:execute$9711: 1'1 -> \PREADY
Add EF_TMR32_APB/$auto$insbuf.cc:97:execute$9712: \instance_to_wrap.timeout_flag -> \timeout_flag

63. Executing CHECK pass (checking for obvious problems).
Checking module EF_TMR32_APB...
Found and reported 0 problems.
{
   "creator": "Yosys 0.38 (git sha1 543faed9c8c, clang++ 16.0.6 -fPIC -Os)",
   "invocation": "stat -json -liberty /home/nouran/EF_TMR32/verify/uvm-python/sim/default_tag/openlane_run/tmp/5d0d045e000847feaa88701212888717.lib ",
   "modules": {
      "\\EF_TMR32_APB": {
         "num_wires":         1412,
         "num_wire_bits":     1505,
         "num_pub_wires":     264,
         "num_pub_wire_bits": 357,
         "num_memories":      0,
         "num_memory_bits":   0,
         "num_processes":     0,
         "num_cells":         1435,
         "area":              17868.387200,
         "num_cells_by_type": {
            "sky130_fd_sc_hd__a211o_2": 5,
            "sky130_fd_sc_hd__a211oi_2": 2,
            "sky130_fd_sc_hd__a21bo_2": 2,
            "sky130_fd_sc_hd__a21o_2": 33,
            "sky130_fd_sc_hd__a21oi_2": 27,
            "sky130_fd_sc_hd__a221o_2": 53,
            "sky130_fd_sc_hd__a22o_2": 63,
            "sky130_fd_sc_hd__a22oi_2": 2,
            "sky130_fd_sc_hd__a2bb2o_2": 9,
            "sky130_fd_sc_hd__a311oi_2": 1,
            "sky130_fd_sc_hd__a31o_2": 17,
            "sky130_fd_sc_hd__a32o_2": 23,
            "sky130_fd_sc_hd__a41o_2": 2,
            "sky130_fd_sc_hd__and2_2": 31,
            "sky130_fd_sc_hd__and2b_2": 7,
            "sky130_fd_sc_hd__and3_2": 16,
            "sky130_fd_sc_hd__and3b_2": 3,
            "sky130_fd_sc_hd__and4_2": 15,
            "sky130_fd_sc_hd__and4b_2": 3,
            "sky130_fd_sc_hd__and4bb_2": 4,
            "sky130_fd_sc_hd__buf_2": 2,
            "sky130_fd_sc_hd__dfrtp_2": 246,
            "sky130_fd_sc_hd__dfstp_2": 2,
            "sky130_fd_sc_hd__dfxtp_2": 1,
            "sky130_fd_sc_hd__inv_2": 49,
            "sky130_fd_sc_hd__mux2_1": 208,
            "sky130_fd_sc_hd__nand2_2": 59,
            "sky130_fd_sc_hd__nand2b_2": 3,
            "sky130_fd_sc_hd__nand3_2": 2,
            "sky130_fd_sc_hd__nand3b_2": 1,
            "sky130_fd_sc_hd__nand4_2": 2,
            "sky130_fd_sc_hd__nand4b_2": 1,
            "sky130_fd_sc_hd__nor2_2": 83,
            "sky130_fd_sc_hd__nor3_2": 6,
            "sky130_fd_sc_hd__nor4_2": 1,
            "sky130_fd_sc_hd__o2111a_2": 1,
            "sky130_fd_sc_hd__o211a_2": 24,
            "sky130_fd_sc_hd__o211ai_2": 3,
            "sky130_fd_sc_hd__o21a_2": 50,
            "sky130_fd_sc_hd__o21ai_2": 19,
            "sky130_fd_sc_hd__o21ba_2": 5,
            "sky130_fd_sc_hd__o21bai_2": 1,
            "sky130_fd_sc_hd__o221a_2": 25,
            "sky130_fd_sc_hd__o221ai_2": 5,
            "sky130_fd_sc_hd__o22a_2": 32,
            "sky130_fd_sc_hd__o2bb2a_2": 15,
            "sky130_fd_sc_hd__o311a_2": 4,
            "sky130_fd_sc_hd__o31a_2": 6,
            "sky130_fd_sc_hd__o31ai_2": 3,
            "sky130_fd_sc_hd__o32a_2": 2,
            "sky130_fd_sc_hd__o41a_2": 2,
            "sky130_fd_sc_hd__or2_2": 67,
            "sky130_fd_sc_hd__or3_2": 26,
            "sky130_fd_sc_hd__or3b_2": 7,
            "sky130_fd_sc_hd__or4_2": 55,
            "sky130_fd_sc_hd__or4b_2": 17,
            "sky130_fd_sc_hd__or4bb_2": 4,
            "sky130_fd_sc_hd__xnor2_2": 36,
            "sky130_fd_sc_hd__xor2_2": 42
         }
      }
   },
      "design": {
         "num_wires":         1412,
         "num_wire_bits":     1505,
         "num_pub_wires":     264,
         "num_pub_wire_bits": 357,
         "num_memories":      0,
         "num_memory_bits":   0,
         "num_processes":     0,
         "num_cells":         1435,
         "area":              17868.387200,
         "num_cells_by_type": {
            "sky130_fd_sc_hd__a211o_2": 5,
            "sky130_fd_sc_hd__a211oi_2": 2,
            "sky130_fd_sc_hd__a21bo_2": 2,
            "sky130_fd_sc_hd__a21o_2": 33,
            "sky130_fd_sc_hd__a21oi_2": 27,
            "sky130_fd_sc_hd__a221o_2": 53,
            "sky130_fd_sc_hd__a22o_2": 63,
            "sky130_fd_sc_hd__a22oi_2": 2,
            "sky130_fd_sc_hd__a2bb2o_2": 9,
            "sky130_fd_sc_hd__a311oi_2": 1,
            "sky130_fd_sc_hd__a31o_2": 17,
            "sky130_fd_sc_hd__a32o_2": 23,
            "sky130_fd_sc_hd__a41o_2": 2,
            "sky130_fd_sc_hd__and2_2": 31,
            "sky130_fd_sc_hd__and2b_2": 7,
            "sky130_fd_sc_hd__and3_2": 16,
            "sky130_fd_sc_hd__and3b_2": 3,
            "sky130_fd_sc_hd__and4_2": 15,
            "sky130_fd_sc_hd__and4b_2": 3,
            "sky130_fd_sc_hd__and4bb_2": 4,
            "sky130_fd_sc_hd__buf_2": 2,
            "sky130_fd_sc_hd__dfrtp_2": 246,
            "sky130_fd_sc_hd__dfstp_2": 2,
            "sky130_fd_sc_hd__dfxtp_2": 1,
            "sky130_fd_sc_hd__inv_2": 49,
            "sky130_fd_sc_hd__mux2_1": 208,
            "sky130_fd_sc_hd__nand2_2": 59,
            "sky130_fd_sc_hd__nand2b_2": 3,
            "sky130_fd_sc_hd__nand3_2": 2,
            "sky130_fd_sc_hd__nand3b_2": 1,
            "sky130_fd_sc_hd__nand4_2": 2,
            "sky130_fd_sc_hd__nand4b_2": 1,
            "sky130_fd_sc_hd__nor2_2": 83,
            "sky130_fd_sc_hd__nor3_2": 6,
            "sky130_fd_sc_hd__nor4_2": 1,
            "sky130_fd_sc_hd__o2111a_2": 1,
            "sky130_fd_sc_hd__o211a_2": 24,
            "sky130_fd_sc_hd__o211ai_2": 3,
            "sky130_fd_sc_hd__o21a_2": 50,
            "sky130_fd_sc_hd__o21ai_2": 19,
            "sky130_fd_sc_hd__o21ba_2": 5,
            "sky130_fd_sc_hd__o21bai_2": 1,
            "sky130_fd_sc_hd__o221a_2": 25,
            "sky130_fd_sc_hd__o221ai_2": 5,
            "sky130_fd_sc_hd__o22a_2": 32,
            "sky130_fd_sc_hd__o2bb2a_2": 15,
            "sky130_fd_sc_hd__o311a_2": 4,
            "sky130_fd_sc_hd__o31a_2": 6,
            "sky130_fd_sc_hd__o31ai_2": 3,
            "sky130_fd_sc_hd__o32a_2": 2,
            "sky130_fd_sc_hd__o41a_2": 2,
            "sky130_fd_sc_hd__or2_2": 67,
            "sky130_fd_sc_hd__or3_2": 26,
            "sky130_fd_sc_hd__or3b_2": 7,
            "sky130_fd_sc_hd__or4_2": 55,
            "sky130_fd_sc_hd__or4b_2": 17,
            "sky130_fd_sc_hd__or4bb_2": 4,
            "sky130_fd_sc_hd__xnor2_2": 36,
            "sky130_fd_sc_hd__xor2_2": 42
         }
      }
}

64. Printing statistics.

=== EF_TMR32_APB ===

   Number of wires:               1412
   Number of wire bits:           1505
   Number of public wires:         264
   Number of public wire bits:     357
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1435
     sky130_fd_sc_hd__a211o_2        5
     sky130_fd_sc_hd__a211oi_2       2
     sky130_fd_sc_hd__a21bo_2        2
     sky130_fd_sc_hd__a21o_2        33
     sky130_fd_sc_hd__a21oi_2       27
     sky130_fd_sc_hd__a221o_2       53
     sky130_fd_sc_hd__a22o_2        63
     sky130_fd_sc_hd__a22oi_2        2
     sky130_fd_sc_hd__a2bb2o_2       9
     sky130_fd_sc_hd__a311oi_2       1
     sky130_fd_sc_hd__a31o_2        17
     sky130_fd_sc_hd__a32o_2        23
     sky130_fd_sc_hd__a41o_2         2
     sky130_fd_sc_hd__and2_2        31
     sky130_fd_sc_hd__and2b_2        7
     sky130_fd_sc_hd__and3_2        16
     sky130_fd_sc_hd__and3b_2        3
     sky130_fd_sc_hd__and4_2        15
     sky130_fd_sc_hd__and4b_2        3
     sky130_fd_sc_hd__and4bb_2       4
     sky130_fd_sc_hd__buf_2          2
     sky130_fd_sc_hd__dfrtp_2      246
     sky130_fd_sc_hd__dfstp_2        2
     sky130_fd_sc_hd__dfxtp_2        1
     sky130_fd_sc_hd__inv_2         49
     sky130_fd_sc_hd__mux2_1       208
     sky130_fd_sc_hd__nand2_2       59
     sky130_fd_sc_hd__nand2b_2       3
     sky130_fd_sc_hd__nand3_2        2
     sky130_fd_sc_hd__nand3b_2       1
     sky130_fd_sc_hd__nand4_2        2
     sky130_fd_sc_hd__nand4b_2       1
     sky130_fd_sc_hd__nor2_2        83
     sky130_fd_sc_hd__nor3_2         6
     sky130_fd_sc_hd__nor4_2         1
     sky130_fd_sc_hd__o2111a_2       1
     sky130_fd_sc_hd__o211a_2       24
     sky130_fd_sc_hd__o211ai_2       3
     sky130_fd_sc_hd__o21a_2        50
     sky130_fd_sc_hd__o21ai_2       19
     sky130_fd_sc_hd__o21ba_2        5
     sky130_fd_sc_hd__o21bai_2       1
     sky130_fd_sc_hd__o221a_2       25
     sky130_fd_sc_hd__o221ai_2       5
     sky130_fd_sc_hd__o22a_2        32
     sky130_fd_sc_hd__o2bb2a_2      15
     sky130_fd_sc_hd__o311a_2        4
     sky130_fd_sc_hd__o31a_2         6
     sky130_fd_sc_hd__o31ai_2        3
     sky130_fd_sc_hd__o32a_2         2
     sky130_fd_sc_hd__o41a_2         2
     sky130_fd_sc_hd__or2_2         67
     sky130_fd_sc_hd__or3_2         26
     sky130_fd_sc_hd__or3b_2         7
     sky130_fd_sc_hd__or4_2         55
     sky130_fd_sc_hd__or4b_2        17
     sky130_fd_sc_hd__or4bb_2        4
     sky130_fd_sc_hd__xnor2_2       36
     sky130_fd_sc_hd__xor2_2        42

   Chip area for module '\EF_TMR32_APB': 17868.387200

65. Executing Verilog backend.
Dumping module `\EF_TMR32_APB'.

66. Executing JSON backend.

Warnings: 2 unique messages, 2 total
End of script. Logfile hash: 0149a346ef, CPU: user 0.91s system 0.02s, MEM: 55.13 MB peak
Yosys 0.38 (git sha1 543faed9c8c, clang++ 16.0.6 -fPIC -Os)
Time spent: 70% 2x abc (2 sec), 8% 7x stat (0 sec), ...
